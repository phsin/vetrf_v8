
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	
	Если Не ИспользуетсяБСП() Тогда
		
		ПараметрыФормы = Новый Структура("СформироватьПриОткрытии, Номенклатура", Истина, ПараметрКоманды);
	    ОткрытьФорму(
	        "Отчет.кб99_ОстаткиПартийПоНоменклатуре.Форма.ФормаОтчета", 
	        ПараметрыФормы, 
	        ПараметрыВыполненияКоманды.Источник, 
	        ПараметрыВыполненияКоманды.Уникальность, 
	        ПараметрыВыполненияКоманды.Окно
	    );
		
	Иначе
		
		// БСП
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		ПараметрыФормы.Вставить("КлючВарианта", "Основной");
		ФормаОтчёта = ПолучитьФорму("Отчет.кб99_ОстаткиПартийПоНоменклатуре.Форма", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно, ПараметрыВыполненияКоманды.НавигационнаяСсылка);
		
		КомпоновщикНастроек = ФормаОтчёта.Отчет.КомпоновщикНастроек;
		УстановитьПараметр(КомпоновщикНастроек, "Номенклатура", ПараметрКоманды, Истина);
		ФормаОтчёта.ВариантМодифицирован = Ложь;
		ФормаОтчёта.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Устанавливает параметр настроек компоновки данных
//
// Параметры:
//	Настройки - НастройкиКомпоновкиДанных -
//				- ПользовательскиеНастройкиКомпоновкиДанных -
//				- КомпоновщикНастроекКомпоновкиДанных - настройки КД, для которых требуется установить параметры.
//	Параметр - Строка, ПараметрКомпоновкиДанных - параметр, который требуется установить
//	Значение - Произвольный - значение, которое требуется установить.
//	Использование - Булево - признак использования параметра КД.
//	Недоступный - Булево - Истина, если элемент настройки не предназначен для изменения в составе пользовательской настройки.
//
// Возвращаемое значение:
//	ЗначениеПараметраНастроекКомпоновкиДанных - установленный параметр настроек КД. Неопределено, если параметр на найден.
//
Функция УстановитьПараметр(Настройки, Параметр, Значение, Использование = Истина, Недоступный = Ложь) Экспорт
	ЗначениеПараметра = ПолучитьПараметр(Настройки, Параметр);
	
	Если ЗначениеПараметра <> Неопределено Тогда
		ЗначениеПараметра.Значение		= Значение;
		ЗначениеПараметра.Использование	= Использование;
		Если Недоступный Тогда
			ЗначениеПараметра.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеПараметра;
КонецФункции

&НаКлиенте
// Возвращает значение параметра компоновки данных
//
// Параметры:
//	ОбъектНастройки - НастройкиКомпоновкиДанных - объект настройки.
//					- ПользовательскиеНастройкиКомпоновкиДанных -
//					- КомпоновщикНастроекКомпоновкиДанных -
//					- НастройкиВложенногоОбъектаКомпоновкиДанных -
//					- ДанныеРасшифровкиКомпоновкиДанных -
//					- КоллекцияЗначенийПараметровКомпоновкиДанных -
//					- ОформлениеКомпоновкиДанных -
//	Параметр		- Строка, ПараметрКомпоновкиДанных - поле или имя поля, для которого нужно вернуть параметр.
//
// Возвращаемое значение:
//	ЗначениеПараметраНастроекКомпоновкиДанных - Неопределено, если параметр не найден.
//
Функция ПолучитьПараметр(ОбъектНастройки, Параметр) Экспорт
	
	ЗначениеПараметра = Неопределено;
	ПолеПараметр = ?(ТипЗнч(Параметр) = Тип("Строка"), Новый ПараметрКомпоновкиДанных(Параметр), Параметр);
	
	Если ТипЗнч(ОбъектНастройки) = Тип("НастройкиКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
		Для Каждого ЭлементНастройки Из ОбъектНастройки.Элементы Цикл
			Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			   И ЭлементНастройки.Параметр = ПолеПараметр Тогда
				ЗначениеПараметра = ЭлементНастройки;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("КомпоновщикНастроекКомпоновкиДанных") Тогда
		Для Каждого ЭлементНастройки Из ОбъектНастройки.ПользовательскиеНастройки.Элементы Цикл
			Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
				И ЭлементНастройки.Параметр = ПолеПараметр Тогда
				ЗначениеПараметра = ЭлементНастройки;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеПараметра = Неопределено Тогда
			ЗначениеПараметра = ОбъектНастройки.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
		КонецЕсли;
		Если ЗначениеПараметра = Неопределено Тогда
			ЗначениеПараметра = ОбъектНастройки.ФиксированныеНастройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
		КонецЕсли;
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("ДанныеРасшифровкиКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("КоллекцияЗначенийПараметровКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.Найти(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("ОформлениеКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.НайтиЗначениеПараметра(ПолеПараметр);
	КонецЕсли;
	
	Возврат ЗначениеПараметра;
	
КонецФункции

&НаСервере
Функция ИспользуетсяБСП()
	
	Результат = Метаданные.Подсистемы.Найти("СтандартныеПодсистемы") <> Неопределено;
	Возврат Результат;
    
КонецФункции