#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.тзВСДОформитьИзменения.Доступность = Ложь;
	Элементы.тзВСДОтправить.Доступность = Ложь;
	
	Если Параметры.Свойство("ВСД2_Транзакция", ВСД2_Транзакция) Тогда
		Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();
		ЗаполнитьФорму(Параметры.ТочкиПерегрузки);
		ОформитьДокументыВСДОбновитьТранспорт();
		Элементы.тзВСДОформитьИзменения.Видимость = Ложь;
		Заголовок = "" +ВСД2_Транзакция+ " изменение номера автомобиля";
		//УстановитьВидимостьЭлемнтов();
	КонецЕсли;
		
КонецПроцедуры

 &НаКлиенте
Процедура тзВСДПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ЭтаФорма.Элементы.МаршрутСледования.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСтроки", "");
	Иначе
		ЭтаФорма.Элементы.МаршрутСледования.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСтроки", Элемент.ТекущиеДанные.КлючСтроки);
	КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура тзВСДПередУдалением(Элемент, Отказ)
	
	СтруктураДляПоиска = Новый Структура("КлючСтроки", Элемент.ТекущиеДанные.КлючСтроки); 
	СтрокиКУдалению = МаршрутСледования.НайтиСтроки(СтруктураДляПоиска); 
	Для Каждого Строка Из СтрокиКУдалению Цикл 
		МаршрутСледования.Удалить(Строка); 
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьТабличныеЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТабличныеЧасти()

	тзВСД.Очистить();
	МаршрутСледования.Очистить();
    ВСД2_Транзакция = Неопределено;
	
	Элементы.тзВСДОформитьИзменения.Доступность = Ложь;
	Элементы.тзВСДОтправить.Доступность = Ложь;
	
КонецПроцедуры

#КонецОбласти 

# Область Кнопки

&НаКлиенте
Процедура Отправить(Команда)
	
	Состояние("Выполняем запрос на изменение номера автомобиля",,"Ожидайте...",БиблиотекаКартинок.kb99_wrench);
	
	ОтправкаДокументовВсдОбновитьТранспорт();
	
	ПоказатьОповещениеПользователя("Выполнено");
	
КонецПроцедуры 

&НаСервере
Процедура ОтправкаДокументовВсдОбновитьТранспорт()
	
	Для Каждого СтрокаТЗ Из тзВСД Цикл 
		Если НЕ(СтрокаТЗ.Отметка) ИЛИ НЕ ЗначениеЗаполнено(СтрокаТЗ.ДокументОбновитьТранспорт) 
					Или СтрокаТЗ.СтатусЗапроса = Перечисления.кб99_СтатусЗапроса.COMPLETED Тогда
		    Продолжить;
		КонецЕсли;

		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры(ВСД2_Транзакция.Организация);		
  		ПараметрыОрганизации.Отправитель_Площадка = СтрокаТЗ.ВСД.Получатель_Площадка;
		
		ПараметрыФункции = Новый Структура();
		ПараметрыФункции.Вставить("ДокОснование", СтрокаТЗ.ДокументОбновитьТранспорт);
		ПараметрыФункции.Вставить("Параметры", ПараметрыОрганизации);
		
		СтрокаТЗ.СтатусЗапроса = кб99_ВСД_Запросы.ВСД2_ОбновитьТранспорт_Отправить(ПараметрыФункции);
			
		СтрокаТЗ.Отметка = Ложь;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОформитьИзменения(Команда)

	ОформитьДокументыВСДОбновитьТранспорт();

КонецПроцедуры

&НаСервере
Процедура ОформитьДокументыВСДОбновитьТранспорт()
	
	Для Каждого СтрВСД ИЗ тзВСД Цикл
		Если Не СтрВСД.Отметка Или ЗначениеЗаполнено(СтрВСД.ДокументОбновитьТранспорт) Тогда
			Продолжить;
		Иначе
			СтруктураОтбора = Новый Структура("КлючСтроки", СтрВСД.КлючСтроки);
			ТочкиМаршрута = МаршрутСледования.НайтиСтроки(СтруктураОтбора);
			Если ТочкиМаршрута.Количество() > 0 Тогда 
				ДокОбновитьТранспорт = Документы.ВСД2_ОбновитьТранспорт.СоздатьДокумент();
				ПараметрыДокумента = Новый Структура();
				ПараметрыДокумента.Вставить("Организация", ВСД2_Транзакция.Организация);
				ПараметрыДокумента.Вставить("Получатель_Площадка", СтрВСД.ВСД.Отправитель_Площадка);
				ПараметрыДокумента.Вставить("Дата", ТекущаяДата());

				ДанныеЗаполнения = Новый Структура();
				ДанныеЗаполнения.Вставить("ПараметрыДокумента", ПараметрыДокумента);
				ДанныеЗаполнения.Вставить("ДокВсд", СтрВСД.ВСД);
				ДанныеЗаполнения.Вставить("ТочкиМаршрута", ТочкиМаршрута);
								
				ДокОбновитьТранспорт.Заполнить(ДанныеЗаполнения);
				Если ЗначениеЗаполнено(ДокОбновитьТранспорт.ВСДВходящие) Тогда
					ДокОбновитьТранспорт.Записать();
					СтрВСД.ДокументОбновитьТранспорт = ДокОбновитьТранспорт.Ссылка;
					
					Элементы.тзВСДОтправить.Доступность = Истина;
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕСли;			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

# КонецОбласти

#Область ПрочиеСлужебныеПроцедуры

&НаСервере
Процедура ЗаполнитьФорму(тзТочкиМаршрута)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	кб99_ВСД2.Ссылка КАК ВСД
	|ИЗ
	|	Справочник.кб99_ВСД2 КАК кб99_ВСД2
	|ГДЕ
	|	кб99_ВСД2.ДокументОснование = &ДокументОснование
	|	И кб99_ВСД2.СтатусВСД = ЗНАЧЕНИЕ(Перечисление.кб99_СтатусВСД.CONFIRMED)";
	Запрос.УстановитьПараметр("ДокументОснование", ВСД2_Транзакция);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		кб99_ВСД.СообщитьИнфо(СтрШаблон("По документу %1 не оформлены ВСД", ВСД2_Транзакция));
		Возврат;
	КонецЕсли;
	
	ВыборкаВСД = Результат.Выбрать();
	
	Пока ВыборкаВСД.Следующий() Цикл
		нСтрВСД = тзВСД.Добавить();
		нСтрВСД.ВСД = ВыборкаВСД.ВСД;
		МаршрутИзВСД = нСтрВСД.ВСД.ТочкиМаршрута.Выгрузить();
		нСтрВСД.Отметка = Истина;
		нСтрВСД.КлючСтроки = Новый УникальныйИдентификатор;
		Для Каждого ТочкаМаршрута Из тзТочкиМаршрута Цикл
			нСтрМаршрут = МаршрутСледования.Добавить();
			ЗаполнитьЗначенияСвойств(нСтрМаршрут, ТочкаМаршрута);
			СтруктураОтбора = Новый Структура("НомерТочки", ТочкаМаршрута.НомерТочки);
			ТочкаМаршрута_ТК = МаршрутИзВСД.НайтиСтроки(СтруктураОтбора);
			Если ТочкаМаршрута_ТК.Количество() > 0 Тогда
				нСтрМаршрут.UUID = ТочкаМаршрута_ТК[0].UUID; 	
			КонецЕсли;
			нСтрМаршрут.КлючСтроки = нСтрВСД.КлючСтроки;
			нСтрМаршрут.Перегрузка = Истина;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
