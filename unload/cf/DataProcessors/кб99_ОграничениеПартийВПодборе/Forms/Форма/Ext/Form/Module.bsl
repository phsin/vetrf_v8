
&НаКлиенте
Перем ВыбранныеПартии;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Статус = 1;
	
	мсНовыхПартий = Новый Массив;
	Если Параметры.Свойство("СписокНовыхПартий", мсНовыхПартий) Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Организация, Площадка");
		НовыеПартии.ЗагрузитьЗначения(мсНовыхПартий);
		Элементы.Организация.ТолькоПросмотр = Истина;
		Элементы.Площадка.ТолькоПросмотр = Истина;
		
		СписокПартий.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ВСД_Партия.Ссылка КАК Партия,
		|	ВСД_Партия.Производитель_Площадка КАК Производитель,
		|	ВСД_Партия.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВСД_Партия.ВсдДата КАК ДатаВСД,
		|	ВСД_Партия.ДатаИзготовления1 КАК ДатаИзготовления,
		|	ВСД_Партия.ДатаСрокГодности1 КАК ДатаСрокГодности,
		|	ВСД_Партия.ИсключенаИзПодбора КАК ИсключенаИзПодбора,
		|	ВСД_Партия.Количество КАК Количество,
		|	ВСД_Партия.НомерЗаписи КАК НомерЗаписи,
		|	ВСД_Партия.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВСД_Партия.Ссылка В(&ВыбранныеПартии) КАК Пометка
		|ИЗ
		|	Справочник.ВСД_Партия КАК ВСД_Партия
		|ГДЕ
		|	ВСД_Партия.Ссылка В(&НовыеПартии)
		|	И НЕ ВСД_Партия.ПометкаУдаления";
		СписокПартий.Параметры.УстановитьЗначениеПараметра("НовыеПартии", НовыеПартии);
		
	Иначе
		
		Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры(Организация);
		
		ХозСубъект = ПараметрыОрганизации.Отправитель_ХозСубъект;
		Площадка = ПараметрыОрганизации.Отправитель_Площадка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбранныеПартии = Новый Массив;
	СписокПартий.Параметры.УстановитьЗначениеПараметра("ВыбранныеПартии", ВыбранныеПартии);
	УстановитьОтборПартий();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПартийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.СписокПартийПометка Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТекущиеДанные.Пометка Тогда
				СнятьПометку(ТекущиеДанные.Партия);
			Иначе
				ПоставитьПометку(ТекущиеДанные.Партия);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	СписокПартий.Параметры.УстановитьЗначениеПараметра("ВыбранныеПартии", ВыбранныеПартии);
	Элементы.СписокПартий.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(Партия)
	
	Индекс = ВыбранныеПартии.Найти(Партия);
	Если Индекс >= 0 Тогда
		ВыбранныеПартии.Удалить(Индекс);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьПометку(Партия)
	
	Индекс = ВыбранныеПартии.Найти(Партия);
	Если Индекс = Неопределено Тогда
		ВыбранныеПартии.Добавить(Партия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлощадкаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("ХозСубъект", ХозСубъект);
	ПараметрыПодбора = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, Отбор", Истина, Истина, ЗначениеОтбора);
	ОткрытьФорму("Справочник.ВСД_Площадка.ФормаВыбора", ПараметрыПодбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПартий()
	
	ОтборДинамическогоСписка = СписокПартий.КомпоновщикНастроек.ФиксированныеНастройки.Отбор;
	ОтборДинамическогоСписка.Элементы.Очистить();
	
	ЭлементОтбора = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партия.Получатель_ХозСубъект");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ХозСубъект;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(ХозСубъект);
	
	ЭлементОтбора = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партия.Получатель_Площадка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Площадка;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(Площадка);
	
	ЭлементОтбора = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партия.Продукция_Элемент");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Продукция;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(Продукция);
	
	ЭлементОтбора = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтранаПроисхождения");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = СтранаПроисхождения;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(СтранаПроисхождения);
	
	ЭлементОтбора = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИсключенаИзПодбора");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Статус = 2;
	ЭлементОтбора.Использование = Статус <> 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры(Организация);
	
	ХозСубъект = ПараметрыОрганизации.Отправитель_ХозСубъект;
	Площадка = ПараметрыОрганизации.Отправитель_Площадка;
	УстановитьОтборПартий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлощадкаПриИзменении(Элемент)
	УстановитьОтборПартий();
КонецПроцедуры

&НаКлиенте
Процедура СтранаПроисхожденияПриИзменении(Элемент)
	УстановитьОтборПартий();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьЗначениеОграниченияНаСервере(Исключить, ВыбранныеПартии)
	
	Для Каждого Партия Из ВыбранныеПартии Цикл
		
		обПартия = Партия.ПолучитьОбъект();
		обПартия.ИсключенаИзПодбора = Исключить;
		обПартия.Записать();
		
		ЗаписьЖурналаРегистрации("Изменение значения реквизита ИсключенаИзПодбора",
		                          УровеньЖурналаРегистрации.Примечание,
		                          Метаданные.Справочники.ВСД_Партия,
		                          Партия,
		                          "Установлено значение: " + ?(Исключить, "Исключить", "Снять ограничение")
		                          );
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзПодбора(Команда)
	
	Состояние("Выполняетя обработка",, "Подождите...", БиблиотекаКартинок.kb99_clock_24x24);
	УстановитьЗначениеОграниченияНаСервере(Истина, ВыбранныеПартии);
	ВыбранныеПартии.Очистить();
	СписокПартий.Параметры.УстановитьЗначениеПараметра("ВыбранныеПартии", ВыбранныеПартии);
	ПоказатьОповещениеПользователя("Выполнено");
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОграничениеНаПодбор(Команда)
	
	Состояние("Выполняетя обработка",, "Подождите...", БиблиотекаКартинок.kb99_clock_24x24);
	УстановитьЗначениеОграниченияНаСервере(Ложь, ВыбранныеПартии);
	ВыбранныеПартии.Очистить();
	СписокПартий.Параметры.УстановитьЗначениеПараметра("ВыбранныеПартии", ВыбранныеПартии);
	ПоказатьОповещениеПользователя("Выполнено");
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	УстановитьОтборПартий();
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПриИзменении(Элемент)
	УстановитьОтборПартий();
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	ВыбранныеПартии = ПолучитьВсеПартииИзСписка();
	СписокПартий.Параметры.УстановитьЗначениеПараметра("ВыбранныеПартии", ВыбранныеПартии);
	Элементы.СписокПартий.Обновить();
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьВсеПартииИзСписка()
	
	Запрос = Новый Запрос();
	Запрос.Текст = СписокПартий.ТекстЗапроса;
	Запрос.УстановитьПараметр("ВыбранныеПартии", Новый Массив);
	Запрос.УстановитьПараметр("НовыеПартии", НовыеПартии);
	
	Если ЗначениеЗаполнено(Площадка) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ВСД_Партия.Получатель_Площадка = &Получатель_Площадка";
		Запрос.УстановитьПараметр("Получатель_Площадка", Площадка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтранаПроисхождения) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ВСД_Партия.СтранаПроисхождения = &СтранаПроисхождения";
		Запрос.УстановитьПараметр("СтранаПроисхождения", СтранаПроисхождения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Продукция) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ВСД_Партия.Продукция_Элемент = &Продукция_Элемент";
		Запрос.УстановитьПараметр("Продукция_Элемент", Продукция);
	КонецЕсли;
	
	Если Статус <> 1 Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ВСД_Партия.ИсключенаИзПодбора = " + ?(Статус = 2, "ИСТИНА", "ЛОЖЬ");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Рез = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Рез.Добавить(Выборка.Партия);
	КонецЦикла;
	
	Возврат Рез;
	
КонецФункции

&НаКлиенте
Процедура СнятьОтметки(Команда)
	
	ВыбранныеПартии = Новый Массив;
	СписокПартий.Параметры.УстановитьЗначениеПараметра("ВыбранныеПартии", ВыбранныеПартии);
	Элементы.СписокПартий.Обновить();
	
КонецПроцедуры


