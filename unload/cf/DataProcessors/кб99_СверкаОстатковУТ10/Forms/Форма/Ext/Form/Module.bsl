
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Метаданные.РегистрыНакопления.Найти("ТоварыНаСкладах") = Неопределено Тогда
		ВызватьИсключение "Данный отчет не совместим с вашей конфигурацией.";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиНаСервере()
	
	Объект.Остатки1С.Очистить();
	Объект.ОстаткиМеркурий.Очистить();
	Объект.СверкаСходится.Очистить();
	
	Запрос = Новый Запрос;
	ЗапросТекст = "ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	//|	ТоварыНаСкладахОстатки.СерияНоменклатуры.СрокГодности КАК ДатаСрокГодностиСерия,
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК ВНаличииОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(, @Склад@) КАК ТоварыНаСкладахОстатки
	|ГДЕ
	//|	ТоварыНаСкладахОстатки.СерияНоменклатуры <> &СерияПустая
	|	ТоварыНаСкладахОстатки.КоличествоОстаток > 0
	|	И ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ(&ГруппаНоменклатуры)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура";
	//|	ТоварыНаСкладахОстатки.СерияНоменклатуры.СрокГодности";
	
	Если ЗначениеЗаполнено(Объект.Площадка.Склады) Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "@Склад@", "Склад В (&ВыбСклады)");
		Запрос.УстановитьПараметр("ВыбСклады", Объект.Площадка.Склады.Выгрузить(, "Склад"));
	ИначеЕсли ЗначениеЗаполнено(Объект.Площадка.Склад) Тогда
		ЗапросТекст=СтрЗаменить(ЗапросТекст, "@Склад@", "Склад = &ВыбСклад");
		Запрос.УстановитьПараметр("ВыбСклад", Объект.Площадка.Склад);
	Иначе
		ЗапросТекст=СтрЗаменить(ЗапросТекст, ", @Склад@", "");
	КонецЕсли;
	//Запрос.УстановитьПараметр( "ВыбДата", ТекущаяДата()); // https://its.1c.ru/db/content/v8std/src/200/200/i8100733.htm
	Запрос.УстановитьПараметр("ГруппаНоменклатуры", Объект.ГруппаНоменклатуры);
	
	//если  Объект.УчитыватьПустыеСерии тогда
	//	запросТекст=СтрЗаменить(ЗапросТекст,"ТоварыНаСкладахОстатки.СерияНоменклатуры <> &СерияПустая
	//	|	И ТоварыНаСкладахОстатки.КоличествоОстаток > 0","ТоварыНаСкладахОстатки.КоличествоОстаток > 0");
	//иначе
	//	Запрос.УстановитьПараметр( "СерияПустая",Справочники.СерииНоменклатуры.ПустаяСсылка());
	//конецесли;
	
	Запрос.Текст = ЗапросТекст;
	тзПартии = Запрос.Выполнить().Выгрузить();
	тзПартии.Колонки.Добавить("Цвет");
	тзПартии.Колонки.Добавить("Ошибки");
	тзПартии.Колонки.Добавить("ВСДСписок");
	тзПартии.Колонки.Добавить("КолВоСоотв");
	тзПартии.Колонки.Добавить("КоличествоРасхождение");
	тзПартии.Колонки.Добавить("КоличествоМеркурий");
	тзПартии.Колонки.Добавить("НоменклатураВес");
	тзПартии.Колонки.Добавить("ПродукцияЭлемент");
	
	Для Каждого Стр Из тзПартии Цикл
		Стр.Ошибки = "";
		Стр.НоменклатураВес=?(Стр.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0, 1, Стр.Номенклатура.ЕдиницаХраненияОстатков.Вес);
		
		Продукция_Элемент = кб99_ВСД.Продукция_Элемент_ПолучитьПоНоменклатуре(Стр.Номенклатура);
		Стр.КоличествоМеркурий = 0;
		Стр.ПродукцияЭлемент = Продукция_Элемент;
		тзСписок = кб99_ВСД.ПолучитьСписок_ВСД_Продукция_ЭлементПоНоменклатуре(Стр.Номенклатура);
		Стр.КолВоСоотв = тзСписок.количество();
		сп = Новый СписокЗначений;
		Для Каждого стрТЗСписок из тзСписок цикл
			сп.Добавить(стрТЗСписок.ПродукцияЭлемент);
		КонецЦикла;
		Стр.ВсдСписок = сп;
		
		Стр.ВНаличииОстаток = Стр.ВНаличииОстаток * стр.НоменклатураВес;
		Стр.КоличествоРасхождение = Стр.ВНаличииОстаток;
		Если Не ЗначениеЗаполнено(Продукция_Элемент.ЕдиницаИзмерения) Тогда
			Стр.Ошибки = Стр.Ошибки + "Не заполнена ед. измерения ";
			Если Не ЗначениеЗаполнено(Продукция_Элемент.СрокГодности) Тогда
				Стр.Ошибки = Стр.Ошибки + " и срок годности.";
			КонецЕсли;
			Стр.Цвет = "Желтый";
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура("ПродукцияЭлемент", Справочники.ВСД_Продукция_Элемент.ПустаяСсылка());  // задаем условия
	МассивСтрок = тзПартии.НайтиСтроки(СтруктураОтбора);
	Для Каждого ЭлементМассив Из МассивСтрок Цикл
		тзПартии.Удалить(ЭлементМассив);  //удаляем строки
	КонецЦикла;
	
	тзПартии.Сортировать("Номенклатура Возр");
	Объект.Остатки1С.Загрузить(тзПартии);
	
	Если Не ЗначениеЗаполнено(Объект.ГруппаНоменклатуры) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВСД_Партия.Ссылка КАК Партия,
		|	ВСД_Партия.Продукция_Элемент КАК ПродукцияЭлемент,
		|	ВСД_Партия.ДатаСрокГодности1 КАК СрокГодности1,
		|	ВСД_Партия.ДатаСрокГодности2 КАК СрокГодности2,
		|	ВСД_Партия.Количество КАК Количество,
		|	ВСД_Партия.Количество КАК КоличествоПартии
		|ИЗ
		|	Справочник.ВСД_Партия КАК ВСД_Партия
		|ГДЕ
		|	ВСД_Партия.Получатель_Площадка = &Получатель_Площадка
		|	И ВСД_Партия.Количество > 0
		|	И ВСД_Партия.ПометкаУдаления = ЛОЖЬ";
		Запрос.УстановитьПараметр("Получатель_Площадка", Объект.Площадка);
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВСД_Партия.Ссылка КАК Партия,
		|	ВСД_Партия.Продукция_Элемент КАК ПродукцияЭлемент,
		|	ВСД_Партия.ДатаСрокГодности1 КАК СрокГодности1,
		|	ВСД_Партия.ДатаСрокГодности2 КАК СрокГодности2,
		|	ВСД_Партия.Количество КАК Количество,
		|	ВСД_Партия.Количество КАК КоличествоПартии
		|ИЗ
		|	Справочник.ВСД_Партия КАК ВСД_Партия
		|ГДЕ
		|	ВСД_Партия.Получатель_Площадка = &Получатель_Площадка
		|	И ВСД_Партия.Количество > 0
		|	И ВСД_Партия.ПометкаУдаления = ЛОЖЬ
		|	И ВСД_Партия.Продукция_Элемент В(&Продукция_Элемент)";
		Запрос.УстановитьПараметр("Получатель_Площадка", Объект.Площадка);
		
		СписокПродукции = Новый СписокЗначений;
		Для Каждого стрПартии из тзПартии цикл
			тзСписок = кб99_ВСД.ПолучитьСписок_ВСД_Продукция_ЭлементПоНоменклатуре(стрПартии.Номенклатура);
			Для Каждого стрТЗСписок Из тзСписок Цикл
				СписокПродукции.Добавить(стрТЗСписок.ПродукцияЭлемент);
			КонецЦикла;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Продукция_Элемент", СписокПродукции);
	КонецЕсли;
	тзПартии = Запрос.Выполнить().Выгрузить();
	тзПартии.Колонки.Добавить("ДатаСрокГодности1");
	тзПартии.Колонки.Добавить("ДатаСрокГодности2");
	
	Для Каждого стрПартия из тзПартии Цикл
		стрПартия.ДатаСрокГодности1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(стрПартия.СрокГодности1);
		стрПартия.ДатаСрокГодности2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(стрПартия.СрокГодности2);
	КонецЦикла;
	
	// цвет
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВСД_Продукция_Элемент.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(ВСД_Соответсвия.Ссылка) КАК КолвоСсылок
	|ИЗ
	|	Справочник.ВСД_Продукция_Элемент КАК ВСД_Продукция_Элемент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВСД_Соответсвия КАК ВСД_Соответсвия
	|		ПО (ВСД_Соответсвия.ПродукцияЭлемент = ВСД_Продукция_Элемент.Ссылка)
	|			И (ВСД_Соответсвия.ПометкаУдаления = ЛОЖЬ)
	|			И (ВСД_Соответсвия.ПродукцияЭлемент.ПометкаУдаления = ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВСД_Продукция_Элемент.Ссылка";
	тзПЭ = Запрос.Выполнить().Выгрузить();
	тзПартии.Колонки.Добавить("Цвет");
	
	Для Каждого стрПЭ из тзПЭ Цикл
		Если стрПЭ.КолвоСсылок = 0 Тогда
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ПродукцияЭлемент", стрПЭ.Ссылка);
			тзПартииОтбор = тзПартии.НайтиСтроки(ПараметрыОтбора);
			Для Каждого стрПартия из тзПартииОтбор Цикл
				стрПартия.Цвет = "Красный";
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Объект.ОстаткиМеркурий.Загрузить(тзПартии);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстатки(Команда)
	ЗаполнитьОстаткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСверкуНаСервере()
	
	Объект.СверкаСходится.Очистить();
	тзТовары = Объект.Остатки1С.Выгрузить();
	тзПартии = Объект.ОстаткиМеркурий.Выгрузить();
	
	Для Каждого строкаТовар из тзТовары Цикл
		Товар = строкаТовар.Номенклатура;
		тзПЭ = кб99_ВСД.ПолучитьСписок_ВСД_Продукция_ЭлементПоНоменклатуре(Товар);
		КоличествоМеркурий = 0;
		
		Для Каждого строкаПЭ из тзПЭ Цикл
			ПЭ = СтрокаПЭ.ПродукцияЭлемент;
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ПродукцияЭлемент", ПЭ);
			тзПартииОтбор = тзПартии.НайтиСтроки(ПараметрыОтбора);
			
			Для Каждого стрПартия из тзПартииОтбор Цикл
				Если ( стрПартия.Количество > 0) И (строкаТовар.КоличествоРасхождение > 0) Тогда
					стрСверка = Объект.СверкаСходится.Добавить();
					ЗаполнитьЗначенияСвойств(стрСверка, стрПартия);
					стрСверка.Номенклатура = Товар;
					
					Если строкаТовар.КоличествоРасхождение > стрПартия.Количество Тогда
						стрСверка.Количество = стрПартия.Количество;
						строкаТовар.КоличествоРасхождение = строкаТовар.КоличествоРасхождение - стрПартия.Количество;
						стрПартия.Количество = 0;
						стрПартия.Откоректированно = Истина;
					Иначе
						стрСверка.Количество = строкаТовар.КоличествоРасхождение;
						стрПартия.Откоректированно = Истина;
						стрПартия.Количество = стрПартия.Количество - строкаТовар.КоличествоРасхождение;
						строкаТовар.КоличествоРасхождение = 0;
					КонецЕсли;
					Если стрСверка.Количество = стрСверка.Партия.Количество Тогда
						стрСверка.Цвет = "Зеленый";
					КонецЕсли;
				КонецЕсли;
				КоличествоМеркурий = КоличествоМеркурий + стрПартия.КоличествоПартии;
			КонецЦикла;
		КонецЦикла;
		строкаТовар.КоличествоМеркурий = КоличествоМеркурий;
	КонецЦикла;
	
	Объект.Остатки1С.Загрузить(тзТовары);
	Объект.ОстаткиМеркурий.Загрузить(тзПартии);
	
	тзПартии.Колонки.Добавить("Удалить");
	Для Каждого стрТЗ Из тзПартии Цикл
		Если стрТЗ.количество <> стрТЗ.Партия.Количество Тогда
			стрТз.Удалить = 1;
		КонецЕсли;
	КонецЦикла;
	УдаляемыеСтроки = тзПартии.НайтиСтроки(Новый Структура("Удалить", 1));
	Для Каждого СтрокаТаблицы Из УдаляемыеСтроки Цикл
		тзПартии.Удалить(СтрокаТаблицы)
	КонецЦикла;
	
	Объект.ОстаткиМеркурийУдаление.Загрузить(тзПартии);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСверку(Команда)
	ЗаполнитьОстаткиНаСервере();
	ЗаполнитьСверкуНаСервере();
КонецПроцедуры

&НаСервере
Функция КорректировкаСроковГодности()
	
	ДокВСД = Документы.ВСД2_Инвентаризация.СоздатьДокумент();
	
	ДокВСД.Дата = ТекущаяДата();
	ДокВСД.Организация = Объект.Организация;
	ДокВСД.Владелец_ХозСубъект = Объект.ХозСубъект;
	ДокВСД.Владелец_площадка = Объект.Площадка;
	ДокВСД.ПричинаРасхождения = "Инвентаризация партий";
	ДокВСД.ОписаниеНесоответствия = "Инвентаризация партий";
	
	Партии = Объект.СверкаКорректировка.Выгрузить();
	
	Для Каждого СтрПартии Из Партии Цикл
		Если НЕ(СтрПартии.Отметка) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрПартии.ДатаСрокГодности1) Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Партия = СтрПартии.Партия;
			НоваяСтрока.Продукция_Элемент = СтрПартии.ПродукцияЭлемент;
			НоваяСтрока.Количество = СтрПартии.Количество;
			НоваяСтрока.Продукция = НоваяСтрока.Продукция_Элемент.Продукция;
			НоваяСтрока.ВидПродукции = НоваяСтрока.Продукция_Элемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Партия.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмерения) Тогда
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в " + НоваяСтрока.Партия);
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			СтрДата1 = НоваяСтрока.Партия.ДатаИзготовления1;
			НоваяСтрока.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(СтрДата1);
			НоваяСтрока.ДатаСрокГодности1 = СтрПартии.ДатаСрокГодностиСерия;
			НоваяСтрока.Производитель_площадка = НоваяСтрока.Партия.Производитель_Площадка;
			НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
		КонецЕсли;
	КонецЦикла;
	
	ДокВСД.Записать();
	
	Возврат ДокВСД.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура СоздатьИнвентаризациюДаты(Ответ,Парам) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДокВСД = КорректировкаСроковГодности();
		ОткрытьФорму("Документ.ВСД2_Инвентаризация.ФормаОбъекта", Новый Структура("Ключ", ДокВСД));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура кнКорректировкаДаты(Команда)
	
	ТВопроса = "Создать ВСД2_Инвентаризация по списку корректировки сроков годности?";
	Оповещение = Новый ОписаниеОповещения("СоздатьИнвентаризациюДаты", ЭтаФорма);
	ПоказатьВопрос(Оповещение, ТВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "");
	
КонецПроцедуры

&НаКлиенте
Процедура кнОтметитьВсе(Команда)
	
	Для Каждого Стр Из Объект.СверкаКорректировка Цикл
		Стр.Отметка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура кнСнятьВсе(Команда)
	
	Для Каждого Стр Из Объект.СверкаКорректировка Цикл
		Стр.Отметка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция КорректировкаОстатков()
	
	ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры(Объект.Организация);
	
	ДокВСД = Документы.ВСД2_Инвентаризация.СоздатьДокумент();
	
	ДокВСД.Дата = ТекущаяДата();
	ДокВСД.Организация = Объект.Организация;
	ДокВСД.Владелец_ХозСубъект = Объект.ХозСубъект;
	ДокВСД.Владелец_площадка = Объект.Площадка;
	ДокВСД.ПричинаРасхождения = "Инвентаризация партий";
	ДокВСД.ОписаниеНесоответствия = "Инвентаризация партий";
	
	тзОстатки1с = Объект.Остатки1С.Выгрузить();
	тзОстаткиМеркурий = Объект.ОстаткиМеркурий.Выгрузить();
	тзСверка = Объект.СверкаСходится.Выгрузить();
	тзСверка.Свернуть("ПродукцияЭлемент,Партия","Количество");
	
	// Добавим недостающее количество.
	Для Каждого СтрОстатки1с Из тзОстатки1с Цикл
		Если ЗначениеЗаполнено(СтрОстатки1с.КоличествоРасхождение) И (СтрОстатки1с.КоличествоРасхождение > 0) Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Продукция_Элемент = кб99_ВСД.Продукция_Элемент_ПолучитьПоНоменклатуре(СтрОстатки1с.Номенклатура);
			НоваяСтрока.Количество = СтрОстатки1с.КоличествоРасхождение;
			НоваяСтрока.Продукция = НоваяСтрока.Продукция_Элемент.Продукция;
			НоваяСтрока.ВидПродукции = НоваяСтрока.Продукция_Элемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмерения) Тогда
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в "+НоваяСтрока.Продукция_Элемент);
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			НоваяСтрока.ДатаИзготовления1 = ТекущаяДата();
			НоваяСтрока.ДатаСрокГодности1 = ТекущаяДата() + НоваяСтрока.Продукция_Элемент.СрокГодности * 86400;
			НоваяСтрока.Производитель_площадка = НоваяСтрока.Продукция_Элемент.Площадка;
			Если ЗначениеЗаполнено(НоваяСтрока.Производитель_площадка.Страна) Тогда
				НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
			Иначе
				НоваяСтрока.Производитель_Страна = ПараметрыОрганизации["Страна"];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрОстатки1с Из тзСверка Цикл
		Если СтрОстатки1с.Количество <> СтрОстатки1с.Партия.Количество Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Продукция_Элемент = СтрОстатки1с.ПродукцияЭлемент;
			НоваяСтрока.Количество = СтрОстатки1с.Количество;
			НоваяСтрока.Партия = СтрОстатки1с.Партия;
			НоваяСтрока.Продукция = СтрОстатки1с.ПродукцияЭлемент.Продукция;
			НоваяСтрока.ВидПродукции = СтрОстатки1с.ПродукцияЭлемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмерения) Тогда
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в " + НоваяСтрока.Продукция_Элемент);
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			НоваяСтрока.ДатаСрокГодности1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаСрокГодности1);
			НоваяСтрока.ДатаСрокГодности2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаСрокГодности2);
			
			НоваяСтрока.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаИзготовления1);
			НоваяСтрока.ДатаИзготовления2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаИзготовления2);
			
			НоваяСтрока.Производитель_площадка = СтрОстатки1с.Партия.Производитель_Площадка;
			Если ЗначениеЗаполнено(НоваяСтрока.Производитель_площадка.Страна) Тогда
				НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
			Иначе
				НоваяСтрока.Производитель_Страна = ПараметрыОрганизации["Страна"];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрПартии Из тзОстаткиМеркурий Цикл
		Если СтрПартии.Количество = СтрПартии.Партия.Количество Тогда
			Если СтрПартии.Количество > 0 И Не СтрПартии.Цвет = "Красный" Тогда
				НоваяСтрока = ДокВСД.Продукция.Добавить();
				НоваяСтрока.Партия = СтрПартии.Партия;
				НоваяСтрока.Продукция_Элемент = СтрПартии.ПродукцияЭлемент;
				НоваяСтрока.Количество = 0;
				НоваяСтрока.Продукция = НоваяСтрока.Продукция_Элемент.Продукция;
				НоваяСтрока.ВидПродукции = НоваяСтрока.Продукция_Элемент.ВидПродукции;
				НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Партия.ЕдиницаИзмерения;
				НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
				СтрДата1 = НоваяСтрока.Партия.ДатаИзготовления1;
				НоваяСтрока.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(СтрДата1);
				НоваяСтрока.ДатаСрокГодности1 = СтрПартии.ДатаСрокГодности1;
				СтрДата2 = НоваяСтрока.Партия.ДатаИзготовления2;
				НоваяСтрока.ДатаИзготовления2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(СтрДата2);
				НоваяСтрока.ДатаСрокГодности2 = СтрПартии.ДатаСрокГодности2;
				НоваяСтрока.Производитель_площадка = НоваяСтрока.Партия.Производитель_Площадка;
				Если ЗначениеЗаполнено(НоваяСтрока.Производитель_площадка.Страна) Тогда
					НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
				Иначе
					НоваяСтрока.Производитель_Страна = ПараметрыОрганизации["Страна"];
				КонецЕсли;
			КонецЕсли;
		конецесли;
	КонецЦикла;
	
	ДокВСД.Записать();
	
	Возврат ДокВСД.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура СоздатьИнвентаризациюОстатки(Ответ,Парам) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДокВСД = КорректировкаОстатков();
		ОткрытьФорму("Документ.ВСД2_Инвентаризация.ФормаОбъекта", Новый Структура("Ключ", ДокВСД));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура кнКорректировкаОстатков(Команда)
	
	ТВопроса = "Создать ВСД2_Инвентаризация для корректировки остатков партий ?";
	Оповещение = Новый ОписаниеОповещения("СоздатьИнвентаризациюОстатки", ЭтаФорма);
	ПоказатьВопрос(Оповещение, ТВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Объект.Организация = кб99_ВСД_Параметры.ПолучитьОрганизациюПоУмолчанию();
	ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры(Объект.Организация);
	Объект.ХозСубъект = ПараметрыОрганизации["Отправитель_ХозСубъект"];
	Объект.Площадка = ПараметрыОрганизации["Отправитель_Площадка"];
	
КонецПроцедуры

&НаКлиенте
Процедура Остатки1СПриАктивизацииСтроки(Элемент)
	
	Если Объект.Фильтровать Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			СписокСравнения = ЭтаФорма.Элементы.ОстаткиМеркурий;
			СписокСравнения.ОтборСтрок = Новый ФиксированнаяСтруктура("ПродукцияЭлемент", Элемент.ТекущиеДанные.ПродукцияЭлемент);
			СписокСравненияОстатки = ЭтаФорма.Элементы.Сверка;
			СписокСравненияОстатки.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура", Элемент.ТекущиеДанные.Номенклатура);
		КонецЕсли;
	Иначе
		ЭтаФорма.Элементы.ОстаткиМеркурий.ОтборСтрок = Неопределено;
		ЭтаФорма.Элементы.Сверка.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КорректировкаОстатковСошлось()
	
	ДокВСД = Документы.ВСД2_Инвентаризация.СоздатьДокумент();
	
	ДокВСД.Дата = ТекущаяДата();
	ДокВСД.Организация = Объект.Организация;
	ДокВСД.Владелец_ХозСубъект = Объект.ХозСубъект;
	ДокВСД.Владелец_площадка = Объект.Площадка;
	ДокВСД.ПричинаРасхождения = "Инвентаризация партий";
	ДокВСД.ОписаниеНесоответствия = "Инвентаризация партий";
	
	тзОстатки1с = Объект.СверкаСходится.Выгрузить();
	тзостатки1с.Свернуть("ПродукцияЭлемент,Партия","Количество");
	
	Для Каждого СтрОстатки1с Из тзОстатки1с Цикл
		Если СтрОстатки1с.Количество<>СтрОстатки1с.Партия.Количество Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Продукция_Элемент = СтрОстатки1с.ПродукцияЭлемент;
			НоваяСтрока.Количество = СтрОстатки1с.Количество;
			НоваяСтрока.Партия = СтрОстатки1с.Партия;
			НоваяСтрока.Продукция = СтрОстатки1с.ПродукцияЭлемент.Продукция;
			НоваяСтрока.ВидПродукции = СтрОстатки1с.ПродукцияЭлемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмерения) Тогда
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в " + НоваяСтрока.Продукция_Элемент);
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			НоваяСтрока.ДатаСрокГодности1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаСрокГодности1);
			НоваяСтрока.ДатаСрокГодности2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаСрокГодности2);
			НоваяСтрока.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаИзготовления1);
			НоваяСтрока.ДатаИзготовления2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаИзготовления2);
			НоваяСтрока.Производитель_площадка = СтрОстатки1с.Партия.Производитель_Площадка;
			НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
		КонецЕсли;
	КонецЦикла;
	
	ДокВСД.Записать();
	
	Возврат ДокВСД.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ОткорректироватьНаСервере(Ответ,Парам) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДокВСД = КорректировкаОстатковСошлось();
		ОткрытьФорму("Документ.ВСД2_Инвентаризация.ФормаОбъекта", Новый Структура("Ключ", ДокВСД));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Откорректировать(Команда)
	
	ТВопроса = "Создать ВСД2_Инвентаризация для корректировки остатков партий?";
	Оповещение = Новый ОписаниеОповещения("ОткорректироватьНаСервере",ЭтаФорма);
	ПоказатьВопрос(Оповещение, ТВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "");
	
КонецПроцедуры