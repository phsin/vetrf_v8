Функция ЗапросПоТранзакции() 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВСД2_транзакция.Ссылка КАК Ссылка1,
	|	ВСД2.Ссылка КАК ВСД2,
	|	ВСД2.Отправитель_Площадка.Наименование КАК Отправитель_ПлощадкаНаименование,
	|	ВЫРАЗИТЬ(ВСД2.Отправитель_Площадка.Адрес КАК СТРОКА(150)) КАК Поле1,
	|	ВСД2.Получатель_Площадка.Наименование КАК Получатель_ПлощадкаНаименование,
	|	ВЫРАЗИТЬ(ВСД2.Получатель_Площадка.Адрес КАК СТРОКА(150)) КАК Получатель_ПлощадкаАдрес,
	|	ВСД2.ТтнНомер КАК ТтнНомер,
	|	ВСД2.ТтнДата КАК ТтнДата,
	|	ВСД2_транзакция.Организация.Наименование КАК ОрганизацияНаименование,
	|	ВСД2.UUID КАК UUID,
	|	ВСД2_транзакция.Организация.Инн КАК ОрганизацияИнн,
	|	ВСД2.ВсдДата КАК Дата,
	|	ВЫРАЗИТЬ(ВСД2.Получатель_ХозСубъект.Контрагент.НаименованиеПолное КАК СТРОКА(150)) КАК ПолучательХозСубъектНаименование,
	|	ВСД2.Получатель_ХозСубъект.Контрагент.ИНН КАК ПолучательХозСубъектИНН,
	|	ВЫРАЗИТЬ(ВСД2.НаименованиеПродукции КАК СТРОКА(150)) КАК НаименованиеПродукции,
	|	ВСД2.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВСД2.ДатаИзготовления КАК СТРОКА(50)) КАК ДатаИзготовления,
	|	ВСД2.ДатаИзготовления1 КАК ДатаИзготовления1,
	|	ВСД2.ДатаИзготовления2 КАК ДатаИзготовления2,
	|	ВЫРАЗИТЬ(ВСД2.ДатаСрокГодности КАК СТРОКА(50)) КАК ДатаСрокГодности,
	|	ВСД2.ДатаСрокГодности1 КАК ДатаСрокГодности1,
	|	ВСД2.ДатаСрокГодности2 КАК ДатаСрокГодности2,
	|	ВСД2.Продукция_Элемент.Площадка КАК ПроизводительПлощадка,
	|	ВСД2.Продукция_Элемент.Площадка.Страна КАК СтранаПроисхождения
	|ИЗ
	|	Справочник.кб99_ВСД2 КАК ВСД2
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВСД2_транзакция КАК ВСД2_транзакция
	|		ПО ВСД2.ДокументОснование = ВСД2_транзакция.Ссылка
	|ГДЕ
	|	ВСД2_транзакция.Ссылка = &Ссылка
	|	И ВСД2.ПометкаУдаления = ЛОЖЬ
	|	И ВСД2.СтатусВСД = &СтатусВСД
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВСД2_транзакция.Ссылка,
	|	ДокВСД2.Ссылка,
	|	ДокВСД2.Отправитель_Площадка.Наименование,
	|	ВЫРАЗИТЬ(ДокВСД2.Отправитель_Площадка.Адрес КАК СТРОКА(150)),
	|	ДокВСД2.Получатель_Площадка.Наименование,
	|	ВЫРАЗИТЬ(ДокВСД2.Получатель_Площадка.Адрес КАК СТРОКА(150)),
	|	ДокВСД2.ТтнНомер,
	|	ДокВСД2.ТтнДата,
	|	ВСД2_транзакция.Организация.Наименование,
	|	ДокВСД2.UUID,
	|	ВСД2_транзакция.Организация.Инн,
	|	ДокВСД2.ВсдДата,
	|	ВЫРАЗИТЬ(ДокВСД2.Получатель_ХозСубъект.Контрагент.НаименованиеПолное КАК СТРОКА(150)),
	|	ДокВСД2.Получатель_ХозСубъект.Контрагент.ИНН,
	|	ВЫРАЗИТЬ(ДокВСД2.НаименованиеПродукции КАК СТРОКА(150)),
	|	ДокВСД2.Количество,
	|	ВЫРАЗИТЬ(ДокВСД2.ДатаИзготовления КАК СТРОКА(50)),
	|	ДокВСД2.ДатаИзготовления1,
	|	ДокВСД2.ДатаИзготовления2,
	|	ВЫРАЗИТЬ(ДокВСД2.ДатаСрокГодности КАК СТРОКА(50)),
	|	ДокВСД2.ДатаСрокГодности1,
	|	ДокВСД2.ДатаСрокГодности2,
	|	ДокВСД2.Производитель_Площадка,
	|	ДокВСД2.Производитель_Площадка.Страна
	|ИЗ
	|	Документ.ВСД2 КАК ДокВСД2
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВСД2_транзакция КАК ВСД2_транзакция
	|		ПО ДокВСД2.ДокументОснование = ВСД2_транзакция.Ссылка
	|ГДЕ
	|	ВСД2_транзакция.Ссылка = &Ссылка
	|	И ДокВСД2.ПометкаУдаления = ЛОЖЬ
	|	И ДокВСД2.СтатусВСД = &СтатусВСД";

	Возврат ТекстЗапроса;
	
КонецФункции

Процедура Печать( ТабДокумент, ДокСсылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокСсылка) Тогда 
		кб99_ВСД.СообщитьИнфо("Не выбран документ ВСД для печати");
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ЗапросПоТранзакции();		

	ДанныеQRКода = кб99_ВСД_УправлениеПечатью.ДанныеQRКода("Проверка", 1, 190);
	ИспользоватьВнешнююКомпоненту=Ложь;
	Макет = Документы.ВСД2_транзакция.ПолучитьМакет("Макет");
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры.НомерДок = ДокСсылка.Номер;
	ОбластьМакета.Параметры.ДатаДок = Формат(ДокСсылка.Дата,"ДЛФ=Д");
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокСсылка); 
	Запрос.УстановитьПараметр("СтатусВСД", Перечисления.кб99_СтатусВСД.CONFIRMED);
	ОбластьМакета = Макет.ПолучитьОбласть("ОбластьШтрихкод");
	
	МассивВыводимыхОбластей = Новый Массив;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		ПечНомерТТН = Выборка.ттнНомер;		
		тВСД = "Ветеринарное свидетельство (оформлен) Код: "+ Выборка.UUID;
		тОтправитель = "Фирма-отправитель: "+ Выборка.ОрганизацияНаименование +", ИНН:"+ Выборка.ОрганизацияИНН+", ТТН: № "+Выборка.ттнНомер+" от "+Выборка.ТтнДата;
		тПолучатель = "Фирма-получатель: "+ Выборка.ПолучательХозСубъектНаименование +", ИНН: "+ Выборка.ПолучательХозСубъектИНН;
		тПлощадка = "Предприятие-получатель: " + Выборка.Получатель_ПлощадкаНаименование+", Адрес: " +Выборка.Получатель_ПлощадкаАдрес;;
		тПродукция = "Продукция: "+Выборка.НаименованиеПродукции +", "+Выборка.Количество+" кг";
		
		Если ЗначениеЗаполнено(Выборка.ДатаИзготовления1) Тогда
			тВыработано = "Выработана: "+Формат(Выборка.ДатаИзготовления1,"ДФ=dd.MM.yyyy; ДЛФ=D; ДП=-")+"-"+Формат(Выборка.ДатаИзготовления2,"ДФ=dd.MM.yyyy; ДЛФ=D; ДП=-");					
		Иначе
			тВыработано = "Выработана: " + Сокрлп(Выборка.ДатаИзготовления);
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.ДатаСрокГодности1) Тогда
			тВыработано = тВыработано + 
			" срок годности: "+ Формат(Выборка.ДатаСрокГодности1,"ДФ=dd.MM.yyyy; ДЛФ=D; ДП=-")+"-"+Формат(Выборка.ДатаСрокГодности2,"ДФ=dd.MM.yyyy; ДЛФ=D; ДП=-");
		Иначе
			тВыработано = тВыработано + " срок годности: "+ СокрЛП(Выборка.ДатаСрокГодности);
		КонецЕсли;
		
		тКод = "Код: "+Выборка.UUID;  
		тСгенерировано = "Сгенерировано 1С vetis.kb99.pro "+ТекущаяДата()+" "+ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
	   			 			
		ШтрихКод = "http://mercury.vetrf.ru/pub/operatorui?_language=ru&_action=showVetDocumentFormByUuid&uuid= "+Выборка.UUID;
		
		ДанныеQRКода = кб99_ВСД_УправлениеПечатью.ДанныеQRКода( ШтрихКод, 1, 190);
		Если ДанныеQRКода = Неопределено Тогда
			КартинкаQRКода = Новый Картинка();
		Иначе
			КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		КонецЕсли;
		ОбластьМакета.Рисунки.Штрихкод.Картинка = КартинкаQRКода;

		ОбластьМакета.Параметры.тВСД = тВСД;
		ОбластьМакета.Параметры.тОтправитель = тОтправитель;
		ОбластьМакета.Параметры.тПолучатель = тПолучатель;
		ОбластьМакета.Параметры.тПлощадка = тПлощадка;
		ОбластьМакета.Параметры.ПлощадкаПроизводитель = Выборка.ПроизводительПлощадка;
		ОбластьМакета.Параметры.СтранаПроисхождения = ?(ЗначениеЗаполнено(Выборка.ПроизводительПлощадка),
			Выборка.ПроизводительПлощадка.Страна, "Российская федерация");
		ОбластьМакета.Параметры.тПродукция = тПродукция;
		ОбластьМакета.Параметры.тВыработано = тВыработано;
		ОбластьМакета.Параметры.тКод = тКод;
		ОбластьМакета.Параметры.тСгенерировано = тСгенерировано;
		
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда 
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ВСД";
	ТабДокумент.ТолькоПросмотр = Истина;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	ТабДокумент.Защита = Ложь;
	
КонецПроцедуры

Процедура ПечатьНаборныйЛист(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.ВСД2_транзакция.ПолучитьМакет("ПечатьНаборныйЛист");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВСД2_транзакция.Дата КАК Дата,
	|	ВСД2_транзакция.Номер КАК Номер,
	|	ВСД2_транзакция.Отправитель_ХозСубъект КАК Отправитель_ХозСубъект,
	|	ВСД2_транзакция.Получатель_ХозСубъект КАК Получатель_ХозСубъект,
	|	ВСД2_транзакция.Товары.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		Партия.Наименование КАК ПартияНаименование,
	|		Партия.ДатаИзготовления1 КАК ПартияДатаИзготовления1,
	|		Партия.ДатаИзготовления2 КАК ПартияДатаИзготовления2,
	|		Партия.ДатаСрокГодности1 КАК ПартияДатаСрокГодности1,
	|		Партия.ДатаСрокГодности2 КАК ПартияДатаСрокГодности2,
	|		Продукция_Элемент КАК Продукция_Элемент
	|	) КАК Товары
	|ИЗ
	|	Документ.ВСД2_транзакция КАК ВСД2_транзакция
	|ГДЕ
	|	ВСД2_транзакция.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Номер = Выборка.Номер;
		ОбластьЗаголовок.Параметры.Дата = Формат( Выборка.Дата,"ДФ=dd.MM.yyyy" );
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			Если НЕ ЗначениеЗаполнено(ВыборкаТовары.Номенклатура) Тогда
				ОбластьТовары.Параметры.Номенклатура = кб99_ВСД.ПолучитьНоменклатуруПоПродукцияЭлемент(ВыборкаТовары.Продукция_Элемент, Истина);	
			КонецЕсли;
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;
	   
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.ИмяПараметровПечати = "ВСД";
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Защита = Ложь;
	
КонецПроцедуры
