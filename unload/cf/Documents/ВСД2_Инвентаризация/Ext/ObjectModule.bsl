
Процедура ЗаполнитьРеквизитыСтроки(СтрокаТЧ)
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Партия) Тогда
		ЗаполнитьЗначенияСвойств( СтрокаТЧ, СтрокаТЧ.Партия );
		СтрокаТЧ.КоличествоДоИзменения = СтрокаТЧ.Партия.Количество;
		СтрокаТЧ.ДатаСрокГодности1 = кб99_ВСД_Запросы.СтрокаВДатаВремя( СтрокаТЧ.Партия.ДатаСрокГодности1 );
		СтрокаТЧ.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя( СтрокаТЧ.Партия.ДатаИзготовления1 );
		СтрокаТЧ.ДатаСрокГодности2 = кб99_ВСД_Запросы.СтрокаВДатаВремя( СтрокаТЧ.Партия.ДатаСрокГодности2 );
		СтрокаТЧ.ДатаИзготовления2 = кб99_ВСД_Запросы.СтрокаВДатаВремя( СтрокаТЧ.Партия.ДатаИзготовления2 );
	Иначе
		ЗаполнитьЗначенияСвойств( СтрокаТЧ, СтрокаТЧ.Продукция_Элемент);
		СтрокаТЧ.Производитель_Площадка = СтрокаТЧ.Продукция_Элемент.Площадка;
		СтрокаТЧ.НаименованиеПродукции = СтрокаТЧ.Продукция_Элемент.Наименование;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаТЧ.Производитель_Площадка) Тогда
		СтрокаТЧ.Производитель_Страна = СтрокаТЧ.Производитель_Площадка.Страна;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если (ТипЗнч(ДанныеЗаполнения) = Тип("ТаблицаЗначений")) Тогда 
		
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );
		
		Для Каждого СтрПартии Из ДанныеЗаполнения Цикл
			Если СтрПартии.Количество >= СтрПартии.КоличествоСписания Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрПартии.Продукция_Элемент)  Тогда
				Продолжить;
			КонецЕсли;
			
			Разница = СтрПартии.КоличествоСписания - СтрПартии.Количество;
			НоваяСтрока = Продукция.Добавить();
			НоваяСтрока.КлючСтроки = Новый УникальныйИдентификатор();
			НоваяСтрока.Продукция_Элемент 	= СтрПартии.Продукция_Элемент;
			НоваяСтрока.Количество 			= Разница;
			НоваяСтрока.Продукция 			= НоваяСтрока.Продукция_Элемент.Продукция;
			НоваяСтрока.ВидПродукции 		= НоваяСтрока.Продукция_Элемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено( НоваяСтрока.ЕдиницаИзмерения ) Тогда 
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в "+НоваяСтрока.Продукция_Элемент);	
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			НоваяСтрока.ДатаИзготовления1 = Дата;
			НоваяСтрока.ДатаСрокГодности1 = Дата + НоваяСтрока.Продукция_Элемент.СрокГодности*86400;
			НоваяСтрока.Производитель_площадка = ?(ЗначениеЗаполнено(НоваяСтрока.Продукция_Элемент.Площадка),
				НоваяСтрока.Продукция_Элемент.Площадка,
				Владелец_Площадка);
			НоваяСтрока.Производитель_Страна = ?(ЗначениеЗаполнено(НоваяСтрока.Производитель_площадка.Страна), 
				НоваяСтрока.Производитель_площадка.Страна,
				ПараметрыОрганизации["Страна"]);
		КонецЦикла;
	ИначеЕсли ( ТипЗнч(ДанныеЗаполнения) = Тип("Структура") ) Тогда 
		ЭтотОбъект.Организация = ДанныеЗаполнения.ПараметрыДокумента.Организация;
		ЭтотОбъект.Владелец_Площадка = ДанныеЗаполнения.ПараметрыДокумента.Отправитель_Площадка;
		ЭтотОбъект.Владелец_ХозСубъект   =   ДанныеЗаполнения.ПараметрыДокумента.Отправитель_ХозСубъект;
		ЭтотОбъект.ПричинаРасхождения    =   ДанныеЗаполнения.ПараметрыДокумента.парамПричинаРасхождения;
		ЭтотОбъект.ОписаниеНесоответствия =  ДанныеЗаполнения.ПараметрыДокумента.парамОписаниеНесоответствия;
		Если ДанныеЗаполнения.Свойство("Партии") Тогда 
			Для Каждого стрПартия из ДанныеЗаполнения.Партии Цикл
				СтрТовары = ЭтотОбъект.Продукция.Добавить();
				СтрТовары.КлючСтроки = Новый УникальныйИдентификатор();
				ЗаполнитьЗначенияСвойств( стрТовары, стрПартия );
				ЗаполнитьРеквизитыСтроки(СтрТовары);
			КонецЦикла;
		ИначеЕсли ДанныеЗаполнения.Свойство("РаспределеннаяПродукция") Тогда
			ЭтотОбъект.ОписаниеНесоответствия =  "Распределение продукции, принятой со склада временного хранения";
			Для Каждого стрПродукция из ДанныеЗаполнения.РаспределеннаяПродукция Цикл
				СтрТовары = ЭтотОбъект.Продукция.Добавить();
				ЗаполнитьЗначенияСвойств(стрТовары, стрПродукция);
				
				Если кб99_ВСД_Общий.ЕстьРеквизитИлиСвойствоОбъекта(стрПродукция, "ДатаИзготовления") Тогда
					СтрТовары.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(стрПродукция.ДатаИзготовления);	
				КонецЕсли;
				
				Если кб99_ВСД_Общий.ЕстьРеквизитИлиСвойствоОбъекта(стрПродукция, "ДатаСрокГодности") Тогда
					СтрТовары.ДатаСрокГодности1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(стрПродукция.ДатаСрокГодности);	
				КонецЕсли;

				СтрТовары.КлючСтроки = Новый УникальныйИдентификатор();
				ЗаполнитьРеквизитыСтроки(СтрТовары);
				СтрТовары.Продукция_Элемент = стрПродукция.Продукция_Элемент;
				Если ЗначениеЗаполнено(стрПродукция.КоличествоСписания) Тогда
					СтрТовары.Количество = стрПродукция.Количество - стрПродукция.КоличествоСписания;
				КонецЕсли;
				Если ЗначениеЗаполнено(стрПродукция.НомерУровняУпаковки) Тогда
					// Уровни и форма упаковки.
					СтрУпаковки = ЭтотОбъект.УровниУпаковки.Добавить();
					СтрУпаковки.СтрокаПродукции = СтрТовары.КлючСтроки;
					СтрУпаковки.НомерУровня = стрПродукция.НомерУровняУпаковки;
					СтрУпаковки.ФормаУпаковки = ?(ЗначениеЗаполнено(стрПродукция.ФормаУпаковки),стрПродукция.ФормаУпаковки,Неопределено);
					СтрУпаковки.Количество = ?(ЗначениеЗаполнено(стрПродукция.КоличествоУпаковок),стрПродукция.КоличествоУпаковок,1);
					// Маркировка
					СтрМаркировка = ЭтотОбъект.Маркировка.Добавить();
					СтрМаркировка.Класс = Перечисления.кб99_Маркировка.UNDEFINED;
					СтрМаркировка.Маркировка = ?(ЗначениеЗаполнено(СтрТовары.Продукция_Элемент.Площадка),СтрТовары.Производитель_площадка.Наименование,ЭтотОбъект.Владелец_ХозСубъект.Наименование);
					СтрМаркировка.НомерУровня = СтрУпаковки.НомерУровня;
					СтрМаркировка.СтрокаПродукции = СтрУпаковки.СтрокаПродукции;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Если кб99_ВСД_Общий.ФормироватьДвиженияПартий(Организация) Тогда
		
		Движения.кб99_ОстаткиПартийВСД.Записывать = Истина;
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВСД2_ИнвентаризацияПродукция.Продукция_Элемент КАК Продукция_Элемент,
			|	СУММА(ВСД2_ИнвентаризацияПродукция.Количество - ВСД2_ИнвентаризацияПродукция.КоличествоДоИзменения) КАК КоличествоДвижения
			|ИЗ
			|	Документ.ВСД2_Инвентаризация.Продукция КАК ВСД2_ИнвентаризацияПродукция
			|ГДЕ
			|	ВСД2_ИнвентаризацияПродукция.Ссылка.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВСД2_ИнвентаризацияПродукция.Продукция_Элемент";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.КоличествоДвижения = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Движение = Движения.кб99_ОстаткиПартийВСД.Добавить();
			Если ВыборкаДетальныеЗаписи.КоличествоДвижения > 0 Тогда
				КоличествоДвижения = ВыборкаДетальныеЗаписи.КоличествоДвижения;
				ВидДвижения = ВидДвиженияНакопления.Приход;
			Иначе
				КоличествоДвижения = -ВыборкаДетальныеЗаписи.КоличествоДвижения;
				ВидДвижения = ВидДвиженияНакопления.Расход;
			КонецЕсли;
			Движение.ВидДвижения = ВидДвижения;
			Движение.Период = Дата;
			Движение.ВСД_Площадка = Владелец_Площадка;
			Движение.Продукция_Элемент = ВыборкаДетальныеЗаписи.Продукция_Элемент;
			Движение.Количество = КоличествоДвижения;

		КонецЦикла;
	   		
	КонецЕсли;

КонецПроцедуры
