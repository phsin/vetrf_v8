Перем мНеОткрыватьФормуДокумента Экспорт;  //Запрешает открывать форму при вводе на основании, если уже введен ВСД 
Перем ПараметрыОрганизации Экспорт;

Функция ВСД2_Производство_ЗаполнитьДатыИзготовления( стрПродукция, ВыбДата ) 
	
	ПереопределенныйМодуль = кб99_ВСД_Общий.ФункцияПереопределена("ВСД2_Производство_ЗаполнитьДатыИзготовления");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.ВСД2_Производство_ЗаполнитьДатыИзготовления( ПараметрыОрганизации, стрПродукция, ВыбДата );
	КонецЕсли;
	
	стрПродукция.ДатаИзготовления1 = ВыбДата;		
	стрПродукция.ДатаСрокГодности1 = стрПродукция.ДатаИзготовления1+60*60*24*стрПродукция.Продукция_Элемент.СрокГодности;		
		
КонецФункции 

Процедура ЗаполнитьПоРеализации( ДанныеЗаполнения )
	
		// Заполнение шапки
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Организация = ДанныеЗаполнения.Организация;
		Дата =  ДанныеЗаполнения.Дата;
		
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );	
		
		Если НЕ ЗначениеЗаполнено(ПараметрыОрганизации["ПарамРазрешитьВводНаОснованииБолееОдногоВСД"] ) Тогда
			Сообщить("Сохраните параметры для Организации "+ДанныеЗаполнения.Организация);
			Возврат;
		КонецЕсли;			
		
		Если НЕ ПараметрыОрганизации["ПарамРазрешитьВводНаОснованииБолееОдногоВСД"] Тогда		
			ДокВСД = кб99_ВСД.НайтиВСД_Производство(ДанныеЗаполнения.Ссылка);
			Если ЗначениеЗаполнено(ДокВСД) Тогда
				Сообщить("Уже создан "+ДокВСД);				
				мНеОткрыватьФормуДокумента = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
			
		Производитель_ХозСубъект = ПараметрыОрганизации["Отправитель_ХозСубъект"];//ВСД.НайтиХозСубъект(КонтрагентОрганизации);
		Попытка
			Производитель_Площадка = кб99_ВСД.НайтиПлощадкуПоСкладу(ДокументОснование.Склад, Производитель_ХозСубъект);
		Исключение			
		КонецПопытки;
		Если НЕ ЗначениеЗаполнено( Производитель_Площадка ) Тогда 
			Производитель_Площадка = ПараметрыОрганизации["Отправитель_Площадка"];
		КонецЕсли;
		ЗавершитьОперацию = true;
		cargoInspected = true;
		РезультатыИсследований = ПараметрыОрганизации["ВСД_РезультатыИсследований"];//Перечисления.ВСД_РезультатИсследования.VSEFULL;
			
		Если ПараметрыОрганизации["ПарамПроизводствоЗаполнятьТчПоТчСерииПродукции"] Тогда 
			//заполняем по ТЧ СерииПродукции
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.СерииПродукции Цикл
				Продукция_Элемент = кб99_ВСД.Получить_ВСД_Продукция_Элемент( ТекСтрокаТовары.Номенклатура );
				Если ПараметрыОрганизации["ПропускатьПустыеСвойства"] Тогда
					Если НЕ ЗначениеЗаполнено(Продукция_Элемент) Тогда
						Сообщить("Не указано соответствие для "+ТекСтрокаТовары.Номенклатура+" -> в параметрах указано Пропускать");
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			
				НоваяСтрока = Продукция.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Продукция_Элемент = Продукция_Элемент;//ВСД.Получить_ВСД_Продукция_Элемент( НоваяСтрока.Номенклатура );
			
				НоваяСтрока.Продукция = НоваяСтрока.Продукция_Элемент.Продукция ;
				НоваяСтрока.ВидПродукции =  НоваяСтрока.Продукция_Элемент.ВидПродукции;
				НоваяСтрока.НаименованиеПродукции =  НоваяСтрока.Продукция_Элемент.Наименование;
				НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;	
				НоваяСтрока.НомерПартии = кб99_ВСД_Производство.ПолучитьНомерПартии(ПараметрыОрганизации, ТекСтрокаТовары);
			    Попытка
					НоваяСтрока.Количество = кб99_ВСД_Общий.РассчитатьКоличествоДляВСД(ПараметрыОрганизации, ТекСтрокаТовары, НоваяСтрока.Продукция_Элемент);
				Исключение
					Сообщить(ОписаниеОшибки());
					НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
				КонецПопытки;
				
				ВСД2_Производство_ЗаполнитьДатыИзготовления( НоваяСтрока, ДанныеЗаполнения.Дата );
				
			КонецЦикла;
			
		Иначе
			//заполняем по ТЧ Товары
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				Продукция_Элемент = кб99_ВСД.Получить_ВСД_Продукция_Элемент( ТекСтрокаТовары.Номенклатура );
				Если ПараметрыОрганизации["ПропускатьПустыеСвойства"] Тогда
					Если НЕ ЗначениеЗаполнено(Продукция_Элемент) Тогда
						Сообщить("Не указано соответствие для "+ТекСтрокаТовары.Номенклатура+" -> в параметрах указано Пропускать");
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			
				НоваяСтрока = Продукция.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Продукция_Элемент = Продукция_Элемент;//ВСД.Получить_ВСД_Продукция_Элемент( НоваяСтрока.Номенклатура );
			
				НоваяСтрока.Продукция = НоваяСтрока.Продукция_Элемент.Продукция ;
				НоваяСтрока.ВидПродукции =  НоваяСтрока.Продукция_Элемент.ВидПродукции;
				НоваяСтрока.НаименованиеПродукции =  НоваяСтрока.Продукция_Элемент.Наименование;
				НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;	
			    Попытка
					НоваяСтрока.Количество = кб99_ВСД_Общий.РассчитатьКоличествоДляВСД(ПараметрыОрганизации, ТекСтрокаТовары, НоваяСтрока.Продукция_Элемент);
				Исключение
					Сообщить(ОписаниеОшибки());
					НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
				КонецПопытки;
				
				ВСД2_Производство_ЗаполнитьДатыИзготовления( НоваяСтрока, ДанныеЗаполнения.Дата );
				
			КонецЦикла;
		КонецЕсли		
	
КонецПроцедуры
	
Процедура ЗаполнитьПоТЗ( тзПартии, ВыбДата=Неопределено)	
	
	Если НЕ ЗначениеЗаполнено(ВыбДата) Тогда 
		ВыбДата = ТекущаяДата();
	КонецЕсли;
	
	ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );	
	
	ЗавершитьОперацию = true;
	
	//Таблица Партий для произвосдтва
	Для Каждого стрПартий Из тзПартии Цикл
		Если НЕ(ЗначениеЗаполнено(стрПартий.ВСД_Продукция_Элемент)) Тогда
			кб99_ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+"  не указан ВСД_Продукция_Элемент. Пропускаем...");
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(стрПартий.ВСД_Производство) Тогда
			Продолжить;	
		КонецЕсли;
		Если ЗначениеЗаполнено(стрПартий.Партия) Тогда
			кб99_ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" указана партия. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если СтрПартий.КоличествоСписания <= СтрПартий.Количество Тогда
			Продолжить;	
		КонецЕсли;
		
		Если НЕ(ЗначениеЗаполнено(стрПартий.ВСД_Продукция_Элемент.ЕдиницаИзмерения)) Тогда
			кб99_ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" у "+СокрЛП(стрПартий.ВСД_Продукция_Элемент.Наименование)+" не указана Единица измерения. Пропускаем...");
			Продолжить;
		КонецЕсли;
		
		Если НЕ(ЗначениеЗаполнено(стрПартий.ВСД_Продукция_Элемент.СрокГодности)) Тогда
			кб99_ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" у "+СокрЛП(стрПартий.ВСД_Продукция_Элемент.Наименование)+" не указан Срок годности. Пропускаем...");
			Продолжить;
		КонецЕсли;
		// Возможно несколько производителей-площадок  / продумать
		Если НЕ(стрПартий.ВСД_Продукция_Элемент.Площадка = ПараметрыОрганизации["Отправитель_Площадка"] )  Тогда
			кб99_ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" у "+СокрЛП(стрПартий.ВСД_Продукция_Элемент.Наименование)+" Производителем является "+стрПартий.ВСД_Продукция_Элемент.Площадка+". Пропускаем...");
			Продолжить;
		КонецЕсли;
		
		стрПродукция = Продукция.Добавить();	
		стрПродукция.Продукция_Элемент 	= стрПартий.ВСД_Продукция_Элемент;
		стрПродукция.Количество 		= стрПартий.КоличествоСписания - стрПартий.Количество;
		стрПродукция.ЕдиницаИзмерения 	= стрПродукция.Продукция_Элемент.ЕдиницаИзмерения;
		стрПродукция.Продукция 			= стрПродукция.Продукция_Элемент.Продукция;
		стрПродукция.ВидПродукции 		= стрПродукция.Продукция_Элемент.ВидПродукции;
		стрПродукция.НаименованиеПродукции = стрПродукция.Продукция_Элемент.Наименование;
		стрПродукция.Номенклатура 		= кб99_ВСД.ПолучитьНоменклатуруПоПродукцияЭлемент( стрПартий.ВСД_Продукция_Элемент, Истина );					
		стрПродукция.НомерПартии 		= кб99_ВСД_Производство.ПолучитьНомерПартии(ПараметрыОрганизации, стрПродукция);	
		
		ВСД2_Производство_ЗаполнитьДатыИзготовления( стрПродукция, ВыбДата );
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ПереопределенныйМодуль = кб99_ВСД_Общий.ФункцияПереопределена("ВСД2_Производство_ОбработкаЗаполнения");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		ПереопределенныйМодуль.ВСД2_Производство_ОбработкаЗаполнения( ДанныеЗаполнения, СтандартнаяОбработка );
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг")  или
		(ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров")) Тогда
		
		ЗаполнитьПоРеализации( ДанныеЗаполнения );
					
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда 
		// заполнение из групповой обработки 
		
		ЗаполнитьПоТЗ( ДанныеЗаполнения["тзПартии"], ДанныеЗаполнения["ВыбДата"]);
		
	КонецЕсли;
		
	Попытка
		Если ПараметрыОрганизации["ПарамПроизводствоЗаполнятьПоСправочнику"] Тогда 			
			тзПартии = кб99_ВСД_Производство.ЗаполнитьТчСписаниеИзСпецификацииНоменклатуры( ПараметрыОрганизации, Продукция.Выгрузить() );
		Иначе
			Сырье = кб99_ВСД_Производство.ЗаполнитьСырьеИзВСД_Продукция_Элемент( Продукция.Выгрузить() );
			тзПартии = кб99_ВСД.тзПартииСписанияПоТзПродукция_Элемент( ПараметрыОрганизации, Сырье );
		КонецЕсли;
		ПартииСписания.Загрузить( тзПартии );
	Исключение
		кб99_ВСД.СообщитьИнфо("Не удалось загрузить партии списания");
	КонецПопытки;		
	
КонецПроцедуры
	
мНеОткрыватьФормуДокумента = Ложь;

