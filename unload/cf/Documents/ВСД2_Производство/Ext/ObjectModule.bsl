Перем мНеОткрыватьФормуДокумента Экспорт;  //Запрешает открывать форму при вводе на основании, если уже введен ВСД 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг")  или
		(ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров")) Тогда

		// Заполнение шапки
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Организация = ДанныеЗаполнения.Организация;
		Дата =  ДанныеЗаполнения.Дата;
		
		ПараметрыОрганизации = ВСД.ЗагрузитьПараметры( Организация );
		Если НЕ ЗначениеЗаполнено(ПараметрыОрганизации["ПарамРазрешитьВводНаОснованииБолееОдногоВСД"] ) Тогда
			Сообщить("Сохраните параметры для Организации "+ДанныеЗаполнения.Организация);
			Возврат;
		КонецЕсли;			
		
		Если НЕ ПараметрыОрганизации["ПарамРазрешитьВводНаОснованииБолееОдногоВСД"] Тогда		
			ДокВСД = ВСД.НайтиВСД_Производство(ДанныеЗаполнения.Ссылка);
			Если ЗначениеЗаполнено(ДокВСД) Тогда
				Сообщить("Уже создан "+ДокВСД);				
				мНеОткрыватьФормуДокумента = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
			
		Производитель_ХозСубъект = ПараметрыОрганизации["Отправитель_ХозСубъект"];//ВСД.НайтиХозСубъект(КонтрагентОрганизации);
		Попытка
			Производитель_Площадка = ВСД.НайтиПлощадкуПоСкладу(ДокументОснование.Склад, Производитель_ХозСубъект);
		Исключение			
		КонецПопытки;
		Если НЕ ЗначениеЗаполнено( Производитель_Площадка ) Тогда 
			Производитель_Площадка = ПараметрыОрганизации["Отправитель_Площадка"];
		КонецЕсли;
		ЗавершитьОперацию = true;
		cargoInspected = true;
		РезультатыИсследований = ПараметрыОрганизации["ВСД_РезультатыИсследований"];//Перечисления.ВСД_РезультатИсследования.VSEFULL;
	
		ПропускатьПустыеСвойства = ПараметрыОрганизации["ПропускатьПустыеСвойства"];
		
		
		Если ПараметрыОрганизации["ПарамПроизводствоЗаполнятьТчПоТчСерииПродукции"] Тогда 
			//заполняем по ТЧ СерииПродукции
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.СерииПродукции Цикл
				Продукция_Элемент = ВСД.Получить_ВСД_Продукция_Элемент( ТекСтрокаТовары.Номенклатура );
				Если ПропускатьПустыеСвойства Тогда
					Если НЕ ЗначениеЗаполнено(Продукция_Элемент) Тогда
						Сообщить("Не указано соответствие для "+ТекСтрокаТовары.Номенклатура+" -> в параметрах указано Пропускать");
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			
				НоваяСтрока = Продукция.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Продукция_Элемент = Продукция_Элемент;//ВСД.Получить_ВСД_Продукция_Элемент( НоваяСтрока.Номенклатура );
			
				НоваяСтрока.Продукция = НоваяСтрока.Продукция_Элемент.Продукция ;
				НоваяСтрока.ВидПродукции =  НоваяСтрока.Продукция_Элемент.ВидПродукции;
				НоваяСтрока.НаименованиеПродукции =  НоваяСтрока.Продукция_Элемент.Наименование;
				НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;	
				НоваяСтрока.НомерПартии = ВСД_Производство.ПолучитьНомерПартии(ПараметрыОрганизации, ТекСтрокаТовары);
			    Попытка
					НоваяСтрока.Количество = ВСД_Общий.РассчитатьКоличествоДляВСД(ПараметрыОрганизации, ТекСтрокаТовары, НоваяСтрока.Продукция_Элемент);
				Исключение
					Сообщить(ОписаниеОшибки());
					НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
				КонецПопытки;
				НоваяСтрока.ДатаИзготовления1 = ДанныеЗаполнения.Дата;
				НоваяСтрока.ДатаСрокГодности1 = НоваяСтрока.ДатаИзготовления1+60*60*24*НоваяСтрока.Продукция_Элемент.СрокГодности;
			КонецЦикла;
			
		Иначе
			//заполняем по ТЧ Товары
			Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
				Продукция_Элемент = ВСД.Получить_ВСД_Продукция_Элемент( ТекСтрокаТовары.Номенклатура );
				Если ПропускатьПустыеСвойства Тогда
					Если НЕ ЗначениеЗаполнено(Продукция_Элемент) Тогда
						Сообщить("Не указано соответствие для "+ТекСтрокаТовары.Номенклатура+" -> в параметрах указано Пропускать");
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			
				НоваяСтрока = Продукция.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.Продукция_Элемент = Продукция_Элемент;//ВСД.Получить_ВСД_Продукция_Элемент( НоваяСтрока.Номенклатура );
			
				НоваяСтрока.Продукция = НоваяСтрока.Продукция_Элемент.Продукция ;
				НоваяСтрока.ВидПродукции =  НоваяСтрока.Продукция_Элемент.ВидПродукции;
				НоваяСтрока.НаименованиеПродукции =  НоваяСтрока.Продукция_Элемент.Наименование;
				НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;	
			    Попытка
					НоваяСтрока.Количество = ВСД_Общий.РассчитатьКоличествоДляВСД(ПараметрыОрганизации, ТекСтрокаТовары, НоваяСтрока.Продукция_Элемент);
				Исключение
					Сообщить(ОписаниеОшибки());
					НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
				КонецПопытки;
				НоваяСтрока.ДатаИзготовления1 = ДанныеЗаполнения.Дата;
				НоваяСтрока.ДатаСрокГодности1 = НоваяСтрока.ДатаИзготовления1+60*60*24*НоваяСтрока.Продукция_Элемент.СрокГодности;
			КонецЦикла;
		КонецЕсли		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ТаблицаЗначений") Тогда 
		Партии = ДанныеЗаполнения;
		ПараметрыОрганизации = ВСД.ЗагрузитьПараметры( Организация );
		
		ЗавершитьОперацию = true;
		
		//Таблица Партий для произвосдтва
		Для Каждого стрПартий Из Партии Цикл
			Если НЕ(ЗначениеЗаполнено(стрПартий.ВСД_Продукция_Элемент)) Тогда
				ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+"  не указан ВСД_Продукция_Элемент. Пропускаем...");
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(стрПартий.ВСД_Производство) Тогда
				Продолжить;	
			КонецЕсли;
			Если ЗначениеЗаполнено(стрПартий.Партия) Тогда
				ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" указана партия. Пропускаем...");
				Продолжить;
			КонецЕсли;
			Если СтрПартий.КоличествоСписания <= СтрПартий.Количество Тогда
				Продолжить;	
			КонецЕсли;
			
			Если НЕ(ЗначениеЗаполнено(стрПартий.ВСД_Продукция_Элемент.ЕдиницаИзмерения)) Тогда
				ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" у "+СокрЛП(стрПартий.ВСД_Продукция_Элемент.Наименование)+" не указана Единица измерения. Пропускаем...");
				Продолжить;
			КонецЕсли;
			
			Если НЕ(ЗначениеЗаполнено(стрПартий.ВСД_Продукция_Элемент.СрокГодности)) Тогда
				ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" у "+СокрЛП(стрПартий.ВСД_Продукция_Элемент.Наименование)+" не указан Срок годности. Пропускаем...");
				Продолжить;
			КонецЕсли;
			// Возможно несколько производителей-площадок  / продумать
			Если НЕ(стрПартий.ВСД_Продукция_Элемент.Площадка = ПараметрыОрганизации["Отправитель_Площадка"] )  Тогда
				ВСД.СообщитьИнфо("В строке партий № "+стрПартий.НомерСтроки+" у "+СокрЛП(стрПартий.ВСД_Продукция_Элемент.Наименование)+" Производителем является "+стрПартий.ВСД_Продукция_Элемент.Площадка+". Пропускаем...");
				Продолжить;
			КонецЕсли;
			
			
			//Состояние("Создание ВСД_Производство ");
			
			СтрПродукция = Продукция.Добавить();		
			СтрПродукция.Продукция_Элемент 	= стрПартий.ВСД_Продукция_Элемент;
			СтрПродукция.Количество 		= стрПартий.КоличествоСписания - стрПартий.Количество; //ЖД вероятно не нужно - Количество 
			СтрПродукция.ЕдиницаИзмерения 	= СтрПродукция.Продукция_Элемент.ЕдиницаИзмерения;
			СтрПродукция.Продукция 			= СтрПродукция.Продукция_Элемент.Продукция;
			СтрПродукция.ВидПродукции 		= СтрПродукция.Продукция_Элемент.ВидПродукции;
			СтрПродукция.НаименованиеПродукции = СтрПродукция.Продукция_Элемент.Наименование;
			СтрПродукция.ДатаИзготовления1 = ТекущаяДата();		
	//		Если ДатаОкончанияОтбора>ДатаНачалаОтбора Тогда
	//			СтрПродукция.ДатаИзготовления2 = ДатаОкончанияОтбора;
	//			СтрПродукция.ДатаСрокГодности2 = СтрПродукция.ДатаИзготовления2+60*60*24*СтрПродукция.Продукция_Элемент.СрокГодности;
	//		КонецЕсли;
			СтрПродукция.ДатаСрокГодности1 = СтрПродукция.ДатаИзготовления1+60*60*24*СтрПродукция.Продукция_Элемент.СрокГодности;
			СтрПродукция.Номенклатура 		= ВСД.ПолучитьНоменклатуруПоПродукцияЭлемент( стрПартий.ВСД_Продукция_Элемент, Истина );					
			
			стрПродукция.НомерПартии = ВСД_Производство.ПолучитьНомерПартии(ПараметрыОрганизации, СтрПродукция);
			//ДокВСД.Записать();
			//ДокументСсылка = ДокВСД.Ссылка;
			//стрПартий.ВСД_Производство = ДокументСсылка;
			
			//ВСД.СообщитьИнфо(" создан документ "+ЭтотОбъект);		
		КонецЦикла;
		////ТабСырья = ВСД_Производство.ЗаполнитьСырьеИзВСД_Продукция_Элемент(ДокВСД.Продукция.Выгрузить());
		////ТабСырья = ВСД_Производство.ЗаполнитьСырьеИзВСД_Продукция_Элемент( ДокВСД.Продукция.Выгрузить() );
		//тзПартии = ВСД_Производство.ЗаполнитьТчСписаниеИзСпецификацииНоменклатуры( ПараметрыОрганизации, Продукция.Выгрузить() );
		//
		////Парам = Новый Структура("Отправитель_ХозСубъект, Отправитель_Площадка",ДокВСД.Производитель_ХозСубъект,ДокВСД.Производитель_Площадка);	
		////тзПартии = ВСД_Производство.тзПартииСписанияПоТзПродукция_Элемент( СписокКонстант, ТабСырья, тзАктуальныхПартийСписанияВПроизводство );
		//ПартииСписания.Загрузить( тзПартии );
		
	КонецЕсли;
	
	Попытка
		Если ПараметрыОрганизации["ПарамПроизводствоЗаполнятьПоСправочнику"] Тогда 			
			тзПартии = ВСД_Производство.ЗаполнитьТчСписаниеИзСпецификацииНоменклатуры( ПараметрыОрганизации, Продукция.Выгрузить() );
		Иначе
			Сырье = ВСД_Производство.ЗаполнитьСырьеИзВСД_Продукция_Элемент( Продукция.Выгрузить() );
			тзПартии = ВСД.тзПартииСписанияПоТзПродукция_Элемент( ПараметрыОрганизации, Сырье );
		КонецЕсли;
		ПартииСписания.Загрузить( тзПартии );
	Исключение
		ВСД.СообщитьИнфо("Не удалось загрузить партии списания");
	КонецПопытки;		
	
КонецПроцедуры
	
мНеОткрыватьФормуДокумента = Ложь;

