////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
// Поддержка работы длительных серверных операций в веб-клиенте.
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Заполняет структуру параметров значениями по умолчанию.
// 
// Параметры:
//  ПараметрыОбработчикаОжидания - Структура - заполняется значениями по умолчанию. 
//
// 
Процедура ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания) Экспорт
	
	ПараметрыОбработчикаОжидания = Новый Структура(
		"МинимальныйИнтервал,МаксимальныйИнтервал,ТекущийИнтервал,КоэффициентУвеличенияИнтервала", 1, 15, 1, 1.4);
	
КонецПроцедуры

// Заполняет структуру параметров новыми расчетными значениями.
// 
// Параметры:
//  ПараметрыОбработчикаОжидания - Структура - заполняется расчетными значениями. 
//
// 
Процедура ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания) Экспорт
	
	ПараметрыОбработчикаОжидания.ТекущийИнтервал = ПараметрыОбработчикаОжидания.ТекущийИнтервал * ПараметрыОбработчикаОжидания.КоэффициентУвеличенияИнтервала;
	Если ПараметрыОбработчикаОжидания.ТекущийИнтервал > ПараметрыОбработчикаОжидания.МаксимальныйИнтервал Тогда
		ПараметрыОбработчикаОжидания.ТекущийИнтервал = ПараметрыОбработчикаОжидания.МаксимальныйИнтервал;
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы с формой длительной операции
//

// Открывает форму-индикатор длительной операции.
// 
// Параметры:
//  ВладелецФормы        - УправляемаяФорма - форма, из которой производится открытие. 
//  ИдентификаторЗадания - УникальныйИдентификатор - Идентификатор фонового задания.
//
// Возвращаемое значение:
//  УправляемаяФорма     - ссылка на открытую форму.
// 
Функция ОткрытьФормуДлительнойОперации(Знач ВладелецФормы, Знач ИдентификаторЗадания) Экспорт
	
	ФормаДлительнойОперации = ДлительныеОперацииКлиентПовтИсп.ФормаДлительнойОперации();
	Если ФормаДлительнойОперации.Открыта() Тогда
		ФормаДлительнойОперации = ОткрытьФорму(
			"ОбщаяФорма.ДлительнаяОперация",
			Новый Структура("ИдентификаторЗадания", ИдентификаторЗадания), 
			ВладелецФормы);
	Иначе
		ФормаДлительнойОперации.ВладелецФормы        = ВладелецФормы;
		ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания;
		ФормаДлительнойОперации.Открыть();
	КонецЕсли;
	
	Возврат ФормаДлительнойОперации;
	
КонецФункции

// Закрывает форму-индикатор длительной операции.
// 
// Параметры:
//  СсылкаНаФорму - УправляемаяФорма - ссылка на форму-индикатор длительной операции. 
//
Процедура ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации) Экспорт
	
	Если ТипЗнч(ФормаДлительнойОперации) = Тип("УправляемаяФорма") Тогда
		Если ФормаДлительнойОперации.Открыта() Тогда
			ФормаДлительнойОперации.Закрыть();
		КонецЕсли;
	КонецЕсли;
	ФормаДлительнойОперации = Неопределено;
	
КонецПроцедуры

// Возвращает пустую структуру для параметра ПараметрыОжидания процедуры ДлительныеОперацииКлиент.ОжидатьЗавершение.
//
// Параметры:
//  ФормаВладелец - ФормаКлиентскогоПриложения
//                - Неопределено - форма, из которой вызывается длительная операция.
//
// Возвращаемое значение:
//  Структура              - параметры выполнения задания: 
//   * ФормаВладелец          - ФормаКлиентскогоПриложения
//                            - Неопределено - форма, из которой вызывается длительная операция.
//   * Заголовок              - Строка - заголовок окна, выводимый на форме ожидания. Если не задан, то не выводится.
//   * ТекстСообщения         - Строка - текст сообщения, выводимый на форме ожидания.
//                                       Если не задан, то выводится "Пожалуйста, подождите...".
//   * ВыводитьОкноОжидания   - Булево - если Истина, то открыть окно ожидания с визуальной индикацией длительной операции. 
//                                       Если используется собственный механизм индикации, то следует указать Ложь.
//   * РежимОткрытияОкнаОжидания - РежимОткрытияОкнаФормы - параметр РежимОткрытияОкна у формы ожидания.
//                               - Неопределено - значение по умолчанию.
//   * ВыводитьПрогрессВыполнения - Булево - выводить прогресс выполнения в процентах на форме ожидания.
//                                      Процедура-обработчик длительной операции может сообщить о ходе своего выполнения
//                                      с помощью вызова процедуры ДлительныеОперации.СообщитьПрогресс.
//   * ВыводитьСообщения          - Булево - из формы ожидания выводить в ФормаВладелец сообщения,
//                                       сформированные в процедуре-обработчике длительной операции.
//   * ЗаголовокКнопкиОтмена  - Строка - заголовок кнопки Отмена, если не указано, по умолчанию используется "Отмена"
//   * ОповещениеОПрогрессеВыполнения - ОписаниеОповещения - оповещение, которое периодически вызывается при 
//                                      проверке готовности фонового задания, если ВыводитьОкноОжидания = Ложь.
//                                      Параметры процедуры-обработчика оповещения:
//      # Результат               - см. НовоеСостояниеДлительнойОперации
//      # ДополнительныеПараметры - Произвольный - произвольные данные, переданные в описании оповещения. 
//
//   * Интервал               - Число  - интервал в секундах между проверками готовности длительной операции.
//                                       По умолчанию 0 - после каждой проверки интервал увеличивается с 1 до 15 секунд
//                                       с коэффициентом 1.4.
//   * ОповещениеПользователя - Структура:
//     ** Показать            - Булево - если Истина, то по завершении длительной операции вывести оповещение пользователя.
//     ** Текст               - Строка - текст оповещения пользователя.
//     ** НавигационнаяСсылка - Строка - навигационная ссылка оповещения пользователя.
//     ** Пояснение           - Строка - пояснение оповещения пользователя.
//     ** Картинка            - Картинка - картинка, которая будет показана в окне оповещения. Если Неопределено, то
//                                         картинка не выводится.
//     ** Важное              - Булево - если Истина, то оповещение после автоматического закрытия будет добавлено в
//                                       центр оповещений.
//   
//   * ОтменятьПриЗакрытииФормыВладельца - Булево - по умолчанию ФормаВладелец.Открыта(), Ложь если форма не указана.
//       Если Ложь, тогда длительная операция не будет отменена при закрытии формы владельца и при закрытии окна ожидания.
//   
//   * ПолучатьРезультат - Булево - служебный параметр. Не предназначен для использования.
//
Функция ПараметрыОжидания(ФормаВладелец) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ФормаВладелец", ФормаВладелец);
	Результат.Вставить("ТекстСообщения", "");
	Результат.Вставить("Заголовок", ""); 
	Результат.Вставить("НомерПопытки", 1);
	Результат.Вставить("ВыводитьОкноОжидания", Истина);
	Результат.Вставить("РежимОткрытияОкнаОжидания", Неопределено);
	Результат.Вставить("ВыводитьПрогрессВыполнения", Ложь);
	Результат.Вставить("ОповещениеОПрогрессеВыполнения", Неопределено);
	Результат.Вставить("ВыводитьСообщения", Ложь);
	Результат.Вставить("ЗаголовокКнопкиОтмена", "");
	Результат.Вставить("Интервал", 0);
	Результат.Вставить("ПолучатьРезультат", Ложь);
	Результат.Вставить("ОтменятьПриЗакрытииФормыВладельца",
		ТипЗнч(ФормаВладелец) = Тип("ФормаКлиентскогоПриложения") И ФормаВладелец.Открыта());
	
	ОповещениеПользователя = Новый Структура;
	ОповещениеПользователя.Вставить("Показать", Ложь);
	ОповещениеПользователя.Вставить("Текст", Неопределено);
	ОповещениеПользователя.Вставить("НавигационнаяСсылка", Неопределено);
	ОповещениеПользователя.Вставить("Пояснение", Неопределено);
	ОповещениеПользователя.Вставить("Картинка", Неопределено);
	ОповещениеПользователя.Вставить("Важное", Неопределено);
	Результат.Вставить("ОповещениеПользователя", ОповещениеПользователя);
	
	Возврат Результат;
	
КонецФункции
