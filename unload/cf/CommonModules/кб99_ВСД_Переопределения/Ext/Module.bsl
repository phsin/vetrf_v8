// Модуль используется для переопределения стандартный функций модуля Интеграции
// чтобы при обновлении изменения сохранились - используйте переопределение в этом модуле


// переопределение функций модуля
Функция НайтиФункцию( ИмяФункции ) Экспорт
	
	ПереопределяемыеФункции = новый Структура;
	// ПереопределяемыеФункции.Вставить("ПолучитьНомерАвто", Истина);
	// ПереопределяемыеФункции.Вставить("РассчитатьКоличествоДляВСД", Истина);
	// ПереопределяемыеФункции.Вставить("ПолучитьАртикулНоменклатуры", Истина);
	
	Результат = ПереопределяемыеФункции.Свойство( ИмяФункции );
	Если Результат Тогда 
		кб99_ВСД.СообщитьИнфо("! переопределена функция ["+ИмяФункции+"]");
	КонецЕсли;
	Возврат Результат;		
	
КонецФункции

Функция ПолучитьНомерАвто( ДокОснование ) Экспорт
	Возврат "123АА63"
КонецФункции

Функция РассчитатьКоличествоДляВСД( ПараметрыОрганизации, СтрокаТЧДок, Продукция_Элемент = "" ) Экспорт

	Коэфф = 1;
	
	Если СтрокаТЧДок.Номенклатура.ВесИспользовать Тогда
		Попытка
			Если СтрокаТЧДок.Номенклатура.ВесЗнаменатель>0 Тогда 
				Коэфф=СтрокаТЧДок.Номенклатура.ВесЧислитель/СтрокаТЧДок.Номенклатура.ВесЗнаменатель;
			Иначе
				Коэфф=1;
			КонецЕсли;
		Исключение
			Коэфф = 1;
		КонецПопытки;
	КонецЕсли;
	
	Рез = СтрокаТЧДок[ ПараметрыОрганизации["НазваниеРеквизитаКоличество"] ]*Коэфф;
	
	Возврат Рез;
	
КонецФункции

// заполнение Артикула в ВСД2_Транзакцию -> к каждой сети свой Артикул #2683
Функция ПолучитьСвойствоКонтрагентаАртикул(ВыбКонтрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "	
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ВыбКонтрагент
	|	И ЗначенияСвойствОбъектов.Свойство.Наименование = &АртикулСсылка";
	Запрос.УстановитьПараметр("ВыбКонтрагент", ВыбКонтрагент);
	Запрос.УстановитьПараметр("АртикулСсылка", "НазваниеСвойстваАртикулаНоменклатуры"); // АртикулСсылка
	ТзВрем = Запрос.Выполнить().Выбрать();
	Если ТзВрем.Следующий() Тогда
		Возврат ТзВрем.Значение.Наименование;
	Иначе
		Возврат ""; // Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();	
	КонецЕсли;
	
КонецФункции

Функция ПолучитьАртикулНоменклатуры(ПараметрыОрганизации, НоваяСтрока, СтрокаОснования, ДокСсылка) Экспорт
	
	Ответ = "";
	
	Попытка
		СвойствоКонтрагентаАртикул = ПолучитьСвойствоКонтрагентаАртикул(ДокСсылка.Документоснование.Контрагент);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "	
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &ВыбНоменклатура
		|	И ЗначенияСвойствОбъектов.Свойство.Наименование = &СвойствоАртикул";
		
		Запрос.УстановитьПараметр("ВыбНоменклатура", НоваяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("СвойствоАртикул", СвойствоКонтрагентаАртикул);
		ТзВрем = Запрос.Выполнить().Выбрать();
		Если ТзВрем.Следующий() Тогда
			Ответ = ТзВрем.Значение;
		Иначе
			Ответ = "";	
		КонецЕсли;
		
	Исключение
		// РеквАртикул = ""; //Нет основания - нет Контрагента
	КонецПопытки;

	Возврат Ответ;
	
КонецФункции

// добавление штрихкода в маркировку на 2й и 4й уровни
Функция ЗаполнитьРеквизитыСтрокиВСД( ПараметрыОрганизации, НоваяСтрока, СтрокаОснования, ДокСсылка )  Экспорт
	
//	НоваяСтрока.Номенклатура 			= СтрокаОснования.Номенклатура;
//	НоваяСтрока.Продукция_Элемент 		= СтрокаОснования.Продукция_Элемент;
//	НоваяСтрока.ЕдиницаИзмерения 		= НоваяСтрока.Партия.ЕдиницаИзмерения;
	// 
	Попытка
		НоваяСтрока.Продукция 				= НоваяСтрока.Продукция_Элемент.Продукция;
		НоваяСтрока.ВидПродукции 			= НоваяСтрока.Продукция_Элемент.ВидПродукции;
		НоваяСтрока.НаименованиеПродукции 	= НоваяСтрока.Продукция_Элемент.Наименование;
	Исключение КонецПопытки;
	
	Попытка НоваяСтрока.GTIN = НоваяСтрока.Продукция_Элемент.GTIN; Исключение КонецПопытки;
	Попытка НоваяСтрока.Артикул	= ПолучитьАртикулНоменклатуры( ПараметрыОрганизации, НоваяСтрока, СтрокаОснования, ДокСсылка) Исключение КонецПопытки;
	
	Попытка
		НоваяСтрока.Цель 					= НоваяСтрока.Продукция_Элемент.ВидПродукции.Цель;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Цель) Тогда 
			НоваяСтрока.Цель = ПараметрыОрганизации["ВСДЦель"];
		КонецЕсли;
	Исключение КонецПопытки;
	
	Если докСсылка.Метаданные().ТабличныеЧасти.Найти("УровниУпаковки") <> Неопределено тогда	
		Попытка
			СтрокаУпак = докСсылка.УровниУпаковки.Добавить(); //Документы.ВСД2_транзакция.СоздатьДокумент().УровниУпаковки.Добавить();
			СтрокаУпак.СтрокаПродукции = НоваяСтрока.НомерСтроки;
			СтрокаУпак.Количество = Цел(НоваяСтрока.Количество / НоваяСтрока.Номенклатура.ЕдиницаХраненияОстатков.ВесНетто); //Пропорционально Распределенному количеству
			СтрокаУпак.НомерУровня = Перечисления.ВСД_УровниУпаковки.Потребительский; //ПараметрыОрганизации["ПарамНомерУровняУпаковкиДляВСД"];//СписокПараметров.Получить("ПарамНомерУровняУпаковкиДляВСД");
			СтрокаУпак.ФормаУпаковки = Справочники.ВСД_ФормыУпаковки.НайтиПоРеквизиту("GUID","6090531d-d038-4f6c-a8df-77ba92267ec4"); //Штука
			//ПараметрыОрганизации["ПарамФормаУпаковкиДляВСД"];//СписокПараметров.Получить("ПарамФормаУпаковкиДляВСД");;
			//Маркировки
			// Площадка Производитель
			//СтрокаМарк = докСсылка.Маркировка.Добавить();
			//СтрокаМарк.Строкапродукции = СтрокаУпак.СтрокаПродукции;
			//СтрокаМарк.НомерУровня = СтрокаУпак.НомерУровня;
			//СтрокаМарк.Класс = Перечисления.ВСД_Маркировка.UNDEFINED;
			//СтрокаМарк.Маркировка = НоваяСтрока.Продукция_Элемент.Площадка;
			
			// Штрихкод 
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			        |	Штрихкоды.Штрихкод,
			        |	Штрихкоды.Владелец,
			        |	Штрихкоды.ЕдиницаИзмерения
			        |ИЗ
			        |	РегистрСведений.Штрихкоды КАК Штрихкоды
			        |ГДЕ
			        |	Штрихкоды.Владелец = &Владелец
			        |	И Штрихкоды.ЕдиницаИзмерения = &ЕдиницаИзмерения";
			Запрос.УстановитьПараметр("Владелец", НоваяСтрока.Номенклатура );
			Запрос.УстановитьПараметр("ЕдиницаИзмерения", НоваяСтрока.Номенклатура.ЕдиницаХраненияОстатков );
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда 
				СтрокаМарк = докСсылка.Маркировка.Добавить();
				СтрокаМарк.Строкапродукции = СтрокаУпак.СтрокаПродукции;
				СтрокаМарк.НомерУровня = СтрокаУпак.НомерУровня;
				СтрокаМарк.Класс = Перечисления.ВСД_Маркировка.EAN13;
				СтрокаМарк.Маркировка = Выборка.Штрихкод;
			КонецЕсли;
			
		Исключение 
			кб99_ВСД.СообщитьИнфо(ОписаниеОшибки());	
		КонецПопытки;

		Попытка 
			СтрокаУпак = докСсылка.УровниУпаковки.Добавить(); //Документы.ВСД2_транзакция.СоздатьДокумент().УровниУпаковки.Добавить();
			СтрокаУпак.СтрокаПродукции = НоваяСтрока.НомерСтроки;
			СтрокаУпак.Количество = Цел( НоваяСтрока.Количество / НоваяСтрока.Номенклатура.ЕдиницаИзмеренияМест.ВесНетто );
			//СтрокаУпак.Количество = Цел(СтрокаОснования.Упаковки/СтрокаОснования.Количество*НоваяСтрока.Количество); //Пропорционально Распределенному количеству
			СтрокаУпак.НомерУровня = Перечисления.ВСД_УровниУпаковки.Торговый; //ПараметрыОрганизации["ПарамНомерУровняУпаковкиДляВСД"];//СписокПараметров.Получить("ПарамНомерУровняУпаковкиДляВСД");
			СтрокаУпак.ФормаУпаковки = Справочники.ВСД_ФормыУпаковки.НайтиПоРеквизиту("GUID","fedf5ad4-053c-11e1-99b4-d8d385fbc9e8");  //упаковка
			//ПараметрыОрганизации["ПарамФормаУпаковкиДляВСД"];//СписокПараметров.Получить("ПарамФормаУпаковкиДляВСД");;
			
			////Маркировки
			//СтрокаМарк = докСсылка.Маркировка.Добавить();
			//СтрокаМарк.Строкапродукции = СтрокаУпак.СтрокаПродукции;
			//СтрокаМарк.НомерУровня = СтрокаУпак.НомерУровня;
			//СтрокаМарк.Класс = Перечисления.ВСД_Маркировка.UNDEFINED;
			//СтрокаМарк.Маркировка = НоваяСтрока.Продукция_Элемент.Площадка;
			
			// Штрихкод 
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			        |	Штрихкоды.Штрихкод,
			        |	Штрихкоды.Владелец,
			        |	Штрихкоды.ЕдиницаИзмерения
			        |ИЗ
			        |	РегистрСведений.Штрихкоды КАК Штрихкоды
			        |ГДЕ
			        |	Штрихкоды.Владелец = &Владелец
			        |	И Штрихкоды.ЕдиницаИзмерения = &ЕдиницаИзмерения";
			Запрос.УстановитьПараметр("Владелец", НоваяСтрока.Номенклатура );
			Запрос.УстановитьПараметр("ЕдиницаИзмерения", НоваяСтрока.Номенклатура.ЕдиницаИзмеренияМест );
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда 
				СтрокаМарк = докСсылка.Маркировка.Добавить();
				СтрокаМарк.Строкапродукции = СтрокаУпак.СтрокаПродукции;
				СтрокаМарк.НомерУровня = СтрокаУпак.НомерУровня;
				СтрокаМарк.Класс = Перечисления.ВСД_Маркировка.EAN13;
				СтрокаМарк.Маркировка = Выборка.Штрихкод;
			КонецЕсли;
			
		Исключение 
			кб99_ВСД.СообщитьИнфо(ОписаниеОшибки());	
		КонецПопытки;		
	КонецЕсли;
	
КонецФункции

// + Номер заказа в связанные документы
Функция ЗаполнитьСвязанныеДокументы( ДокВСД ) экспорт
	Попытка 
		ДокВСД.НомерЗаказаПокупателя =  ДокВСД.ДокументОснование.Сделка.НомерВходящегоДокументаЭлектронногоОбмена;
		ДокВСД.ДатаЗаказаПокупателя = ДокВСД.ДокументОснование.Сделка.ДатаВходящегоДокументаЭлектронногоОбмена;
	Исключение
	КонецПопытки;	
	Попытка 
		ДокВСД.ТОРГ12Номер =  ДокВСД.ДокументОснование.Номер;
		ДокВСД.ТОРГ12Дата  = ДокВСД.ДокументОснование.Дата;
	Исключение
	КонецПопытки;	
	
	Возврат ДокВСД;
КонецФункции