#Область ПрограммныйИнтерфейс

// Получает организацию по умолчанию для работы с ВСД
// Адаптирована для различных типовых конфигураций 1С
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация по умолчанию
//
Функция ПолучитьОрганизациюПоУмолчанию() Экспорт
	
	ПереопределенныйМодуль = кб99_ВСД_Утилиты.ФункцияПереопределена("ПолучитьОрганизациюПоУмолчанию");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.ПолучитьОрганизациюПоУмолчанию();
	КонецЕсли;

	НазваниеКонфигурации = Метаданные.Имя;
	ВерсияМассив  = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Метаданные.Версия, ".");
	ТекущаяВерсия = ВерсияМассив[0] + ВерсияМассив[1] + ВерсияМассив[2];
	Версия = ВерсияМассив[0];
	
	_Организация = Справочники.Организации.ПустаяСсылка();
	ТекПользователь = ПолучитьТекущегоПользователя();
	
	Если Метаданные.Имя = "УправлениеТорговлей" Тогда 
		Если Версия="11" Тогда 
			Если Число(ВерсияМассив[2]) <= 4 Тогда 
				МодульТиповойКонфы = кб99_ВСД_Утилиты.ОбщийМодуль("ОрганизацииСлужебный");
				_Организация = МодульТиповойКонфы.ОрганизацияПоУмолчанию();
			Иначе
				_Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
			КонецЕсли;
			
		Иначе //УТ 10			
			МодульТиповойКонфы = кб99_ВСД_Утилиты.ОбщийМодуль("УправлениеПользователями");
			_Организация = МодульТиповойКонфы.ПолучитьЗначениеПоУмолчанию(ТекПользователь,"ОсновнаяОрганизация");
		КонецЕсли 
	ИначеЕсли Метаданные.Имя = "БухгалтерияПредприятия" Тогда 
		Если Версия = "3" Тогда 
			//БП 3.0
			МодульТиповойКонфы = кб99_ВСД_Утилиты.ОбщийМодуль("БухгалтерскийУчетПереопределяемый");
			_Организация = МодульТиповойКонфы.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		Иначе
			// Версия = 2
			МодульТиповойКонфы = кб99_ВСД_Утилиты.ОбщийМодуль("ОбщегоНазначения");
			_Организация = МодульТиповойКонфы.ПолучитьЗначениеПеременной("ОсновнаяОрганизация");
		КонецЕсли;
	ИначеЕсли Метаданные.Имя = "УправлениеПроизводственнымПредприятием" Тогда 		
		//УПП
		МодульТиповойКонфы = кб99_ВСД_Утилиты.ОбщийМодуль("УправлениеПользователями");
		_Организация = МодульТиповойКонфы.ПолучитьЗначениеПоУмолчанию(ТекПользователь,"ОсновнаяОрганизация");
	ИначеЕсли Метаданные.Имя = "кб99_Ветис" Тогда 		
		_Организация = Справочники.Организации.ОсновнаяОрганизация;
	ИначеЕсли Метаданные.Имя = "КомплекснаяАвтоматизация" Тогда 		
		МодульТиповойКонфы = кб99_ВСД_Утилиты.ОбщийМодуль("ЗначениеНастроекПовтИсп");
		_Организация = МодульТиповойКонфы.ПолучитьОрганизациюПоУмолчанию();		
	Иначе
		Попытка				
			_Организация = Справочники.Организации.ОсновнаяОрганизация;
		Исключение
			кб99_ВСД.СообщитьИнфо("Для данной конфигурации 1С не удалось получить значение Организации по умолчанию, обратитесь в тех.поддержку КБ99");
			кб99_ВСД.СообщитьИнфо(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(_Организация) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	Организации.Ссылка КАК Организация
		               |ИЗ
		               |	Справочник.Организации КАК Организации
		               |ГДЕ
		               |	Организации.ПометкаУдаления = ЛОЖЬ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			_Организация =  Выборка.Организация;
		КонецЕсли;
	КонецЕсли;
	
	Возврат _Организация;
	
КонецФункции

// Инициализирует список параметров ВСД для организации
// Возвращает структуру с параметрами и их значениями по умолчанию
// 
// Возвращаемое значение:
//  Структура - параметры сервера ВСД
//
Функция ПараметрыСервер() Экспорт
	
	// Описание параметров
	Параметры = Новый Структура;
	Параметры.Вставить("Организация",											 Справочники.Организации.ПустаяСсылка());
	Параметры.Вставить("КаталогИнтеграции",										 Неопределено);
	Параметры.Вставить("КаталогЛогов",											 Неопределено);
	Параметры.Вставить("param_username",										 Неопределено);
	Параметры.Вставить("param_password",										 Неопределено);
	Параметры.Вставить("param_issuer_id",										 Неопределено);
	Параметры.Вставить("param_api_key",											 Неопределено);
	Параметры.Вставить("param_intiator_login",									 Неопределено);
	Параметры.Вставить("param_vetdoctor_login",									 Неопределено);
	Параметры.Вставить("Отправитель_Площадка",									 Неопределено);
	Параметры.Вставить("Отправитель_ХозСубъект",								 Неопределено);
	Параметры.Вставить("Страна",												 Неопределено);
	Параметры.Вставить("Регион",												 Неопределено);
	Параметры.Вставить("Город",													 Неопределено);
	Параметры.Вставить("НаселенныйПункт",										 Неопределено);
	Параметры.Вставить("ВСД_Экспертиза",										 Неопределено);
	Параметры.Вставить("ВСД_Местность",											 Неопределено);
	Параметры.Вставить("ВСД_ОсобыеОтметки",										 Неопределено);
	Параметры.Вставить("ПаузаСек",												 10);	
	Параметры.Вставить("РеквизитГрузополучатель",								 Неопределено);	
	Параметры.Вставить("ОтладкаЗапросовXML",									 Ложь);	
	Параметры.Вставить("Перевозчик_ХозСубъект",									 Неопределено);		
	Параметры.Вставить("ПропускатьПустыеСвойства",								 Ложь);		
	Параметры.Вставить("ВыводитьПодробнуюИнформацию",							 Ложь);	
	Параметры.Вставить("Смещение",												 0);
	Параметры.Вставить("АвтоЗаписьВСДСоответствия",								 Ложь);
	Параметры.Вставить("НазваниеРеквизитаКоличество",							 "Количество");
	Параметры.Вставить("ПарамКоэффициентПересчетаКоличества",					 Неопределено);
	Параметры.Вставить("ВСД_РезультатыИсследований",							 Перечисления.кб99_РезультатИсследования.VSERAW);
    Параметры.Вставить("ТермическиеУсловияПеревозки",							 Неопределено);
	Параметры.Вставить("ВСДЦель",												 Неопределено);
	Параметры.Вставить("ПарамЗаполнятьТранзакциюПриОтсутствииПартий",			 Ложь);
	Параметры.Вставить("ПарамНомерУровняУпаковкиДляВСД",						 Неопределено);
	Параметры.Вставить("ПарамФормаУпаковкиДляВСД",								 Неопределено);
	Параметры.Вставить("НазваниеРеквизитаКоличествоМест",						 "Количество");
	Параметры.Вставить("ПарамКолонкаСортировкиПартииСписания",					 "ДатаСрокГодности1");
	Параметры.Вставить("ПарамЗнакСортировкиУбывание",							 Ложь);
	Параметры.Вставить("ПарамФильтроватьРеализациюПоСкладуПлощадкиОтправителя",	 Ложь);	
	Параметры.Вставить("ПарамПоставщикОрганизация",								 Неопределено);	
	Параметры.Вставить("ПарамПоставщикХозСубъект",								 Неопределено);	
	Параметры.Вставить("ПарамПоставщикПлощадка",								 Неопределено);	
	Параметры.Вставить("ПарамРазрешитьВводНаОснованииБолееОдногоВСД",			 Ложь);
	Параметры.Вставить("ОтправлятьВФоне",										 Ложь);
	Параметры.Вставить("ПарамПроизводствоЗаполнятьПоСправочнику",				 Ложь);
	Параметры.Вставить("ПарамИспользоватьСерииПродукции",						 Ложь);
	Параметры.Вставить("КодЛицензии",											 Неопределено);
	Параметры.Вставить("ОтключитьОтправкуСтатистики",							 Ложь);
	Параметры.Вставить("ПарамКонтроллироватьСрокГодностиПриОтправке",			 Ложь);
	Параметры.Вставить("СрокГодностиДней",										 0);
	Параметры.Вставить("ПарамКонтроллироватьЗаполнениеУровнейУпаковки",			 Ложь);
	Параметры.Вставить("парамПричинаАннулирования",								 Неопределено);
	Параметры.Вставить("парамПричинаРасхождения",								 Неопределено);
	Параметры.Вставить("парамОписаниеНесоответствия",							 Неопределено);
	Параметры.Вставить("КоэфПересчетаКоличестваПриПроизводстве",				 Неопределено);
	Параметры.Вставить("КоличествоДнейХраненияЗапросов",						 Неопределено);
	Параметры.Вставить("ПарамВсдВходящиеИскатьДокументПрихода",					 Ложь);
	Параметры.Вставить("ПоказыватьПросроченныеПартии",							 Истина);
	Параметры.Вставить("МаксимальноеКоличествоПартийСписанияВДокументе",		 Неопределено);
	Параметры.Вставить("ЗавершатьПроизводство",									 Истина);
	Параметры.Вставить("ПрефиксНомераНезавершенногоПроизводства",				 Неопределено);
	Параметры.Вставить("ЗаполнятьТермическиеУсловияИзВходящегоВСД",				 Ложь);
	Параметры.Вставить("ДобавлятьОсобыеОтметкиИзВходящегоВСД",					 Неопределено);
	Параметры.Вставить("ПроверятьЗаполнениеСырьяВПроизводстве",					 Ложь);
	Параметры.Вставить("ПроверятьБалансРасходаСырья",							 Ложь);
	Параметры.Вставить("ПроцентРасхожденияСырьеПродукция",						 Неопределено);
	Параметры.Вставить("РазрешитьПодменуПродукцииВИсходящемВСД",				 Ложь);
	Параметры.Вставить("ВходящиеПроверятьДатуИзготовления",						 Ложь);
	Параметры.Вставить("ВходящиеПроверятьДатуИзготовленияКоличествоДней",		 Ложь);
	Параметры.Вставить("КонтролироватьДокументПроисхожденияПродукции",			 Ложь);
	Параметры.Вставить("КонтролироватьПравильностьЗаполненияНомераАвтомобиля",	 Ложь);
	Параметры.Вставить("КонтролироватьОстаткиПартийПоРегистру",					 Ложь);
	Параметры.Вставить("ДатаНачалаКонтроляОстатковПартийПоРегистру",			 Неопределено);
	Параметры.Вставить("СвойКонтрагент",										 Неопределено);
	Параметры.Вставить("НомерАвто",												 Неопределено);
	Параметры.Вставить("ПЭ_Сливки",												 Неопределено);
	Параметры.Вставить("ПЭ_Обрат",												 Неопределено);
	Параметры.Вставить("ЖирностьМолокаПроцент",									 Неопределено);
	Параметры.Вставить("ЖирностьСливокПроцент",									 Неопределено);	
	Параметры.Вставить("ПроизводствоРазбиватьПострочно",						 Ложь);
	Параметры.Вставить("КонтролироватьНаличиеЛабИсследований",					 Ложь);	
	Параметры.Вставить("БелокЦелевойПроцент",									 Неопределено);
	Параметры.Вставить("ПЭ_СОМ",									 			 Неопределено);
	Параметры.Вставить("СохранятьЗапросыXmlВФайл",					 			 Ложь);
	Параметры.Вставить("ПривязкаВходящихПартийКДокументамПоступленияОбязательна", Ложь);
	
	Возврат Параметры;

КонецФункции

// Проверяет наличие и заполненность параметра в структуре параметров организации
// 
// Параметры:
//  ПараметрыОрганизации - Структура - параметры организации
//  НазваниеПараметра - Строка - имя проверяемого параметра
//  ОписаниеПараметра - Строка - описание параметра для сообщения (необязательно)
// 
// Возвращаемое значение:
//  Булево - Истина, если параметр существует и заполнен
//
Функция ПроверитьЗначениеПараметра(ПараметрыОрганизации, НазваниеПараметра, ОписаниеПараметра = "") Экспорт
	
	Если ПараметрыОрганизации.Свойство(НазваниеПараметра) Тогда 
		
		Возврат Истина;
		
	Иначе		
		
		кб99_ВСД.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"Не указано значение параметра [%1] %2. Откройте параметры и нажмите кнопку [Сохранить]", 
				НазваниеПараметра, 
				ОписаниеПараметра
				));
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Получает текущего пользователя из параметра сеанса
// Возвращает ссылку на элемент справочника Пользователи
// 
// Возвращаемое значение:
//  СправочникСсылка.Пользователи - текущий пользователь
//
Функция ПолучитьТекущегоПользователя() Экспорт
	
	ПереопределенныйМодуль = кб99_ВСД_Утилиты.ФункцияПереопределена("ПолучитьТекущегоПользователя");
	Если ПереопределенныйМодуль <> Неопределено Тогда		
		Возврат ПереопределенныйМодуль.ПолучитьТекущегоПользователя();
	КонецЕсли;
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции

// Проверяет права пользователя на изменение параметров ВСД
// Возвращает Истина, если пользователь имеет полные права
// 
// Возвращаемое значение:
//  Булево - Истина, если пользователь имеет права на изменение параметров
//
Функция ЭтоПолноправныйПользователь() Экспорт
	
	Возврат ПравоДоступа("Изменение", Метаданные.НайтиПоПолномуИмени("РегистрСведений.кб99_Параметры"));	
	
КонецФункции

#КонецОбласти

