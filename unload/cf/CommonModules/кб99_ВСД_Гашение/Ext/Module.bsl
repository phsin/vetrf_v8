#Область ПрограммныйИнтерфейс

// Находит документ поступления товаров по параметрам входящего ВСД
// Используется для гашения входящих партий
// 
// Параметры:
//  ДатаВходящегоДокумента - Дата - дата входящего документа
//  НомерВходящегоДокумента - Строка - номер входящего документа
//  ИННОтправителя - Строка - ИНН отправителя
// 
// Возвращаемое значение:
//  ДокументСсылка.ПоступлениеТоваровУслуг, Неопределено - найденный документ поступления или Неопределено
//
Функция Гашение_НайтиДокументПоступлениеТоваров(ДатаВходящегоДокумента, НомерВходящегоДокумента, ИННОтправителя) Экспорт
	
	ПереопределенныйМодуль = кб99_ВСД_Утилиты.ФункцияПереопределена("Гашение_НайтиДокументПоступлениеТоваров");
	Если ПереопределенныйМодуль <> Неопределено Тогда		
		Возврат ПереопределенныйМодуль.Гашение_НайтиДокументПоступлениеТоваров(ДатаВходящегоДокумента, НомерВходящегоДокумента, ИННОтправителя);
	КонецЕсли;	
	
	Попытка 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДокПриход.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.ПоступлениеТоваровУслуг КАК ДокПриход
		               |ГДЕ
		               |	ДокПриход.ДатаВходящегоДокумента = &ДатаВходящегоДокумента
		               |	И ДокПриход.НомерВходящегоДокумента = &НомерВходящегоДокумента
					   |	%ИНН%
					   |";
		Запрос.УстановитьПараметр("ДатаВходящегоДокумента", ДатаВходящегоДокумента);
		Запрос.УстановитьПараметр("НомерВходящегоДокумента", НомерВходящегоДокумента);
		Если ЗначениеЗаполнено(ИННОтправителя) Тогда
			ПодстрокаЗамены = "И ДокПриход.Контрагент.ИНН = &ИНН";
			Запрос.УстановитьПараметр("ИНН", ИННОтправителя);
		Иначе
			ПодстрокаЗамены = "";
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ИНН%", ПодстрокаЗамены); 
      	
		тзВыборка = Запрос.Выполнить().Выгрузить();
		Если тзВыборка.Количество()>0 Тогда 
			Возврат тзВыборка[0].Ссылка;
		Иначе
			Возврат Неопределено;
		КонецЕсли 
	Исключение 
		кб99_ВСД.СообщитьИнфо("Не удалось найти документ [Приходная накладная], измените процедуру [Гашение_НайтиДокументПоступлениеТоваров] под вашу структуру конфигурации");
		Возврат Неопределено;
	КонецПопытки
	
КонецФункции

// Проверяет, нужно ли формировать движения по регистру партий
// Зависит от параметров организации
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - организация для проверки
// 
// Возвращаемое значение:
//  Булево - Истина, если нужно формировать движения партий
//
Функция ФормироватьДвиженияПартий(Организация) Экспорт
	
	СписокКонстант = кб99_ВСД.ЗагрузитьПараметры(Организация);
	Если кб99_ВСД_Параметры.ПроверитьЗначениеПараметра(СписокКонстант, "КонтролироватьОстаткиПартийПоРегистру", "Контролировать остатки партий по регистру") 
			И кб99_ВСД_Параметры.ПроверитьЗначениеПараметра(СписокКонстант, "ДатаНачалаКонтроляОстатковПартийПоРегистру", "Дата начала контроля остатков") Тогда
			
		Возврат СписокКонстант.КонтролироватьОстаткиПартийПоРегистру И ТекущаяДатаСеанса() > СписокКонстант.ДатаНачалаКонтроляОстатковПартийПоРегистру;
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

