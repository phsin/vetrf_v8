
#Область СписаниеВПроизводство

//Возвращает Продукция_Элементы и Количество сырья , требуемое для выпуска КоличествоПродукции ВыбраннойПродукции
Функция ПолучитьТзСырьеПоВСД_Продукция_Элемент(ВыбраннаяПродукция, КоличествоПродукции = 0) Экспорт
	
	ТЗСырье = Новый ("ТаблицаЗначений");
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	кб99_ПроизводственнаяСпецификация.Сырье КАК Продукция_Элемент,
				   |	Значение(Справочник.Контрагенты.ПустаяСсылка) Как Контрагент,
				   |	кб99_ПроизводственнаяСпецификация.Коэффициент
                   |ИЗ
                   |	РегистрСведений.кб99_ПроизводственнаяСпецификация КАК кб99_ПроизводственнаяСпецификация
                   |ГДЕ
                   |	кб99_ПроизводственнаяСпецификация.Продукция = &ВыбПродукция";
    Запрос.УстановитьПараметр("ВыбПродукция", ВыбраннаяПродукция);

    ТЗСырье = Запрос.Выполнить().Выгрузить();
	ТЗСырье.Колонки.Добавить("Количество",новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3)));  //Требуемое кол-во сырья на 100 кг ВыбраннаяПродукция
	Если КоличествоПродукции <> 0 Тогда
		Для Каждого СтрСырье Из ТЗСырье Цикл
			СтрСырье.Количество = КоличествоПродукции * СтрСырье.Коэффициент / 100; // на 100 кг продукции
		КонецЦикла
	КонецЕсли;
	
	Возврат ТЗСырье;
	
КонецФункции

//СформироватьТЧСырьяДляСписанияВПроизводствоПоСписку
Функция ЗаполнитьСырьеИзВСД_Продукция_Элемент(тзПродукции) Экспорт
	
	ТЗВсегоСырье = Новый ("ТаблицаЗначений");
	ТЗВсегоСырье.Колонки.Добавить("Продукция_Элемент",новый ОписаниеТипов("СправочникСсылка.ВСД_Продукция_Элемент"));
	ТЗВсегоСырье.Колонки.Добавить("Количество",новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3)));
	ТЗВсегоСырье.Колонки.Добавить("СерияНоменклатуры",новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(20)));
	ТЗВсегоСырье.Колонки.Добавить("Контрагент");
	
	Для Каждого СтрокаПродукции Из тзПродукции Цикл
		тзСырье = ПолучитьТзСырьеПоВСД_Продукция_Элемент( СтрокаПродукции.Продукция_Элемент, СтрокаПродукции.Количество );
		Для Каждого СтрокаСырье Из ТЗСырье Цикл
			ЗаполнитьЗначенияСвойств(ТЗВсегоСырье.Добавить(), СтрокаСырье) 
		КонецЦикла
	КонецЦикла;
	
	ТЗВсегоСырье.Свернуть("Продукция_Элемент","Количество");
	
	Возврат ТЗВсегоСырье; 
	
КонецФункции

Функция тзЗаполнитьПартииСписанияПоТзПродукция(Параметры, тзЭлементыкСписанию, КоличествоСписания, тзАктуальныхПартий, ПартииКСписанию) 
	
	Если НЕ ЗначениеЗаполнено(тзАктуальныхПартий) Тогда
		кб99_ВСД.СообщитьИнфо("Не переданы параметры для получения Актуальных партий - ДанныеЗаполнения или тзЭлементыОснования");
		Возврат ПартииКСписанию;
	КонецЕсли;
	
	СтрокиПартий = кб99_ВСД.ПодобратьПартии( тзАктуальныхПартий, КоличествоСписания );
	Если СтрокиПартий.Количество() = 0  Тогда
		Если Параметры["ПарамЗаполнятьТранзакциюПриОтсутствииПартий"] Тогда
			НоваяСтрока = ПартииКСписанию.Добавить();
			НоваяСтрока.Количество = КоличествоСписания;
		КонецЕсли;
		кб99_ВСД.СообщитьИнфо("Нет партий пропускаем..");				
	КонецЕсли;
	
	Для Каждого СтрПартии Из СтрокиПартий Цикл
		НоваяСтрока = ПартииКСписанию.Добавить();
		НоваяСтрока.Партия = СтрПартии.Партия;
		НоваяСтрока.Количество = СтрПартии.Количество;
		НоваяСтрока.ЕдиницаИзмерения = СтрПартии.Партия.ЕдиницаИзмерения;
		НоваяСтрока.Продукция_Элемент = НоваяСтрока.Партия.Продукция_Элемент;			
		НоваяСтрока.Продукция = НоваяСтрока.Партия.Продукция;			
		НоваяСтрока.ВидПродукции = НоваяСтрока.Партия.ВидПродукции;			
	КонецЦикла;
	
	Если (СтрокиПартий.Итог("Количество") < КоличествоСписания) и Параметры["ПарамЗаполнятьТранзакциюПриОтсутствииПартий"]  Тогда
		//Добавим с пустыми партиями
		НоваяСтрока = ПартииКСписанию.Добавить();
		НоваяСтрока.Количество	=  КоличествоСписания - СтрокиПартий.Итог("Количество") ;
	КонецЕсли; 
	
	Возврат ПартииКСписанию;
	
КонецФункции

//Возвращает Продукция_Элементы и Количество сырья , требуемое для выпуска КоличествоПродукции ВыбраннойПродукции
Функция ПолучитьСырьеИзСпецификацииНоменклатуры( ВыбНоменклатура, КоличествоПродукции = 0) 
	
	тзСырье = Новый("ТаблицаЗначений");
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	СпецификацииНоменклатуры.Ссылка.Владелец КАК НоменклатураПродукция,
                   |	СпецификацииНоменклатуры.Ссылка.Количество КАК КоличествоПродукции,
                   |	СпецификацииНоменклатуры.Номенклатура КАК НоменклатураСырье,
                   |	СпецификацииНоменклатуры.Количество КАК КоличествоСырья,
                   |	ВСД_Соответсвия.ПродукцияЭлемент КАК Продукция_Элемент
                   |ИЗ
                   |	Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииНоменклатуры
                   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВСД_Соответсвия КАК ВСД_Соответсвия
                   |		ПО СпецификацииНоменклатуры.Номенклатура = ВСД_Соответсвия.Владелец
                   |ГДЕ
                   |	СпецификацииНоменклатуры.Ссылка.Владелец = &ВыбНоменклатура";
	
    Запрос.УстановитьПараметр("ВыбНоменклатура", ВыбНоменклатура);

    ТЗСырье = Запрос.Выполнить().Выгрузить();
	ТЗСырье.Колонки.Добавить("Количество",новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3)));  //Требуемое кол-во сырья на 1 кг ВыбНоменклатура
	
	Если КоличествоПродукции > 0 Тогда
		Для Каждого СтрСырье Из ТЗСырье Цикл
			СтрСырье.Количество = КоличествоПродукции * СтрСырье.КоличествоСырья / СтрСырье.КоличествоПродукции;
		КонецЦикла
	КонецЕсли;
	
	Возврат ТЗСырье;
	
КонецФункции

Функция ЗаполнитьТчСписаниеИзСпецификацииНоменклатуры( Знач Параметры, тзНоменклатуры ) Экспорт
	
	Попытка 
		ПартииКСписанию = новый ("ТаблицаЗначений"); //Можно структуру скопировать из вызывающего документа, если в параметр его добавить
		ПартииКСписанию.Колонки.Добавить("Номенклатура",новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ПартииКСписанию.Колонки.Добавить("Продукция_Элемент",новый ОписаниеТипов("СправочникСсылка.ВСД_Продукция_Элемент"));
		ПартииКСписанию.Колонки.Добавить("Продукция",новый ОписаниеТипов("СправочникСсылка.ВСД_Продукция"));
		ПартииКСписанию.Колонки.Добавить("ВидПродукции",новый ОписаниеТипов("СправочникСсылка.ВСД_ВидПродукции"));
		ПартииКСписанию.Колонки.Добавить("Партия",новый ОписаниеТипов("СправочникСсылка.ВСД_Партия"));
		ПартииКСписанию.Колонки.Добавить("Количество",новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3)));
		ПартииКСписанию.Колонки.Добавить("Упаковки",новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3)));
		ПартииКСписанию.Колонки.Добавить("ЕдиницаИзмерения",новый ОписаниеТипов("СправочникСсылка.ВСД_ЕдиницыИзмерения"));
		
		Для Каждого СтрокаПродукции Из тзНоменклатуры Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаПродукции.Номенклатура) Тогда 
				кб99_ВСД.СообщитьИнфо("Номенклатура не заполнена в строке"+СтрокаПродукции.НомерСтроки);
				Продолжить;
			КонецЕсли;			
			
			//1. Получаем список ВСД_Продукция_Элемент для Сырья Номенклатуры из Спецификации
			ТЗСырье = Новый("ТаблицаЗначений");
		    Запрос = Новый Запрос;
		    Запрос.Текст = "ВЫБРАТЬ
		                   |	СпецификацииНоменклатуры.Ссылка.Владелец КАК НоменклатураПродукция,
		                   |	СпецификацииНоменклатуры.Ссылка.Количество КАК КоличествоПродукции,
		                   |	СпецификацииНоменклатуры.Номенклатура КАК НоменклатураСырье,
		                   |	СпецификацииНоменклатуры.Количество КАК КоличествоСырья,
		                   |	ВСД_Соответсвия.ПродукцияЭлемент КАК Продукция_Элемент
		                   |ИЗ
		                   |	Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииНоменклатуры
		                   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВСД_Соответсвия КАК ВСД_Соответсвия
		                   |		ПО СпецификацииНоменклатуры.Номенклатура = ВСД_Соответсвия.Владелец
		                   |ГДЕ
		                   |	СпецификацииНоменклатуры.Ссылка.Владелец В ИЕРАРХИИ ( &ВыбНоменклатура) ";
			
		    Запрос.УстановитьПараметр("ВыбНоменклатура", СтрокаПродукции.Номенклатура );
			тзСырье = Запрос.Выполнить().Выгрузить();
			
			//2. Формируем Актуальные партии для всего сырья = списка тзСырье
			тзПартий = кб99_ВСД.ПолучитьАктуальныеПартии( Параметры, тзСырье.ВыгрузитьКолонку("Продукция_Элемент"), Параметры["Отправитель_Площадка"], Параметры["Отправитель_ХозСубъект"]);
		
			тзСырье = ПолучитьСырьеИзСпецификацииНоменклатуры( СтрокаПродукции.Номенклатура, СтрокаПродукции.Количество );
			Если НЕ ЗначениеЗаполнено(тзСырье ) Тогда 
				Продолжить;
			КонецЕсли;
			
			тзСырье.Свернуть("НоменклатураСырье, Количество");
			
			Для Каждого Ингредиент Из тзСырье Цикл
				тзАктуальныхПартий = кб99_ВСД.ПодобратьПартииПоПродукцияЭлемент(Параметры, тзПартий, Неопределено, Ингредиент.Количество,,Ингредиент.НоменклатураСырье);
				тзЗаполнитьПартииСписанияПоТзПродукция( Параметры, тзСырье, Ингредиент.Количество, тзАктуальныхПартий, ПартииКСписанию);
			КонецЦикла;
		КонецЦикла;
	Исключение
		кб99_ВСД.СообщитьИнфо("Ошибка "+ОписаниеОшибки());
		ПартииКСписанию = Новый ТаблицаЗначений;
	КонецПопытки;
	
	ПартииКСписанию.Свернуть("Номенклатура, Продукция_Элемент, Продукция, ВидПродукции, Партия, ЕдиницаИзмерения", "Количество, Упаковки");    
	
	Возврат ПартииКСписанию;
	
КонецФункции

Функция ПолучитьНомерПартии( Знач ПараметрыОрганизации, СтрокаТчДок ) Экспорт
	
	// вызов переопределения
	ПереопределенныйМодуль = кб99_ВСД_Общий.ФункцияПереопределена("ПолучитьНомерПартии");
	Если ПереопределенныйМодуль <> Неопределено Тогда
		Возврат ПереопределенныйМодуль.ПолучитьНомерПартии( ПараметрыОрганизации, СтрокаТчДок );
	КонецЕсли;

	Попытка 
		Возврат Формат( ТекущаяДата(), "ДЛФ=Д");
	Исключение 
		Возврат "";
	КонецПопытки;
	
КонецФункции

#КонецОбласти
