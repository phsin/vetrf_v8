
Процедура кб99_ВСД_УдалитьСтарыеЗапросы() Экспорт
	
	Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();	
	ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );	
	КоличествоДней = ПараметрыОрганизации["КоличествоДнейХраненияЗапросов"];
	КоличествоДней = ?(КоличествоДней = 0, 30, КоличествоДней);
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	кб99_Запросы.*
	|ИЗ
	|	РегистрСведений.кб99_Запросы КАК кб99_Запросы
	|ГДЕ
	|	кб99_Запросы.Период < &ПериодОчистки";
	Запрос.УстановитьПараметр("ПериодОчистки", ТекущаяДата() - КоличествоДней*86400);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.кб99_Запросы.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		Запись.Запрос = "";
		Запись.Ответ  = "";
		Запись.Ошибки = "";
		Запись.Записать();
	КонецЦикла;	
	
КонецПроцедуры

Процедура кб99_ВСД_УдалитьЗапросы_XML() Экспорт
	
	Попытка
		Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();	
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );	
		КаталогЛогов = ПараметрыОрганизации["КаталогЛогов"];
		КоличествоДней = ПараметрыОрганизации["КоличествоДнейХраненияЗапросов"];
		КоличествоДней = ?(КоличествоДней = 0, 30, КоличествоДней);
		ДатаГраницы = ТекущаяДата() - КоличествоДней*86400;
		Файлы = НайтиФайлы(КаталогЛогов, "*.xml");
		Для Каждого Файл Из Файлы Цикл
			Если Файл.ПолучитьВремяИзменения() < ДатаГраницы Тогда
				УдалитьФайлы(Файл.ПолноеИмя);
			КонецЕсли;
		КонецЦикла;	
	Исключение
		кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"ВСД Ошибка при очистке файлов логов");
	КонецПопытки;
	
КонецПроцедуры

Процедура кб99_ПолучитьАктуальныеПартии(МассивПараметров) Экспорт
	
	Попытка
		Если ТипЗнч(МассивПараметров) <> Тип("Структура") Тогда
			кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"Ошибка при выполнение регламентного задания: Получить актуальные партии.");
			Возврат;
		КонецЕсли;
		
		СписокПлощадок = МассивПараметров.Площадки;
		Если СписокПлощадок.Количество() = 0 Тогда
			Возврат;	
		КонецЕсли;
		
		Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();	
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );
		
		ПараметрыОрганизации.Вставить("ПартииСмещение", 0);
		ПараметрыОрганизации.Вставить("УдалятьПартии", Ложь);
		ПараметрыОрганизации.Вставить("ТолькоАктуальныеПартии", Ложь);
		ПараметрыОрганизации.Вставить("ПартияКонПериода", ТекущаяДата());
		
		Для Каждого Площадка Из СписокПлощадок Цикл
			ПараметрыОрганизации.Вставить("ВыбПлощадка", Площадка.Значение);
			ПараметрыОрганизации.Вставить("ПартияНачПериода", Площадка.Значение.ДатаАктуальностиПартий);
			
			ИдентификаторЗадания = Неопределено;	
			
			НаименованиеЗадания = НСтр("ru = 'Регламентное задание - Ветис загрузка партий по площадке: '" + Площадка.Значение.Наименование);
			Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне( , 
			"кб99_ВСД_Запросы.Партии2_Запрос_Отправить_ВФоне",
			ПараметрыОрганизации,
			НаименованиеЗадания);
			
			ВСД_Площадка = Площадка.Значение.ПолучитьОбъект();
			ВСД_Площадка.ДатаАктуальностиПартий = ТекущаяДата();
			ВСД_Площадка.Записать();
		КонецЦикла;
	Исключение
		кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"Ошибка при выполнение регламентного задания: Получить актуальные партии.");
	КонецПопытки;

КонецПроцедуры

Процедура кб99_ОбновитьСтатусыВСД(МассивПараметров) Экспорт
	
	Попытка
		Если ТипЗнч(МассивПараметров) <> Тип("Структура") Тогда
			кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"Ошибка при выполнение регламентного задания: Обновить статусы ВСД");
			Возврат;
		КонецЕсли;
		
		Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();	
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры(Организация);	

		КоличествоДней = МассивПараметров.КоличествоДней;
		НачалоПериода = ТекущаяДата() - КоличествоДней*86400;
		
		#Область ОбновлениеВСДПоИсходящимДокументам
			//Запрос = Новый Запрос;
			//Запрос.Текст = "
			//|ВЫБРАТЬ
			//|	ВСД2_транзакция.Ссылка КАК ДокументОтгрузки
			//|ПОМЕСТИТЬ втСписокДокументов
			//|ИЗ
			//|	Документ.ВСД2_транзакция КАК ВСД2_транзакция
			//|ГДЕ
			//|	НЕ ВСД2_транзакция.ПометкаУдаления
			//|	И ВСД2_транзакция.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			//|
			//|ИНДЕКСИРОВАТЬ ПО
			//|	ДокументОтгрузки
			//|;
			//|
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ
			//|	кб99_ВСД2.Ссылка КАК Док
			//|ИЗ
			//|	Справочник.кб99_ВСД2 КАК кб99_ВСД2
			//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСписокДокументов КАК втСписокДокументов
			//|		ПО кб99_ВСД2.ДокументОснование = втСписокДокументов.ДокументОтгрузки";
			//Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
			//Запрос.УстановитьПараметр("КонецПериода",  КонецДня(ТекущаяДата()));
			//тзВСД = Запрос.Выполнить().Выгрузить();
			//кб99_ВСД_Запросы.ВСД2_ЗагрузитьПоUUID(ПараметрыОрганизации, , тзВСД);
		#КонецОбласти
		
		#Область ЗагрузкаСпискаТранспортныхВСДСФильтромПоДатеОформления
			ПараметрыЗапроса = Новый Структура;
			ПараметрыЗапроса.Вставить("ПолучательПлощадка", 	ПараметрыОрганизации.Отправитель_Площадка);	
			ПараметрыЗапроса.Вставить("vetDocumentType", 		"TRANSPORT");	
			ПараметрыЗапроса.Вставить("vetDocumentStatus", 		"");	
			ПараметрыЗапроса.Вставить("Смещение", 				0);	
			ПараметрыЗапроса.Вставить("ПоступилиС",  			НачалоПериода);	
			ПараметрыЗапроса.Вставить("ПоступилиПо",			КонецДня(ТекущаяДата()));	
			ПараметрыЗапроса.Вставить("ОтправительХозСубъект", 	ПараметрыОрганизации.Отправитель_ХозСубъект);
			ПараметрыЗапроса.Вставить("ОтправительПлощадка", 	ПараметрыОрганизации.Отправитель_Площадка);	
			
			кб99_ВСД_Запросы.ПолучитьСписокВСД(ПараметрыОрганизации, ПараметрыЗапроса)
		#КонецОбласти
		
	Исключение
		кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"Ошибка при выполнение регламентного задания: Обновить статусы ВСД");
	КонецПопытки;
	
КонецПроцедуры
