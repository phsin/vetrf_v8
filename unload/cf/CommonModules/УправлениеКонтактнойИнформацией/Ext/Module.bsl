// Этот модуль предназначен для реализации алгоритмов работы 
// с контактной информацией.


////////////////////////////////////////////////////////////////////////////////
// ДРУГИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//  Функция формирует сведения об указанном ЮрФизЛице. К сведениям относятся -
// наименование, адрес, номер телефона, банковские реквизиты.
//
// Параметры: 
//  ЮрФизЛицо   - организация или физическое лицо, о котором собираются сведения.
//  ДатаПериода - дата, на которую выбираются сведения о ЮрФизЛице.
//  ДляФизЛицаТолькоИнициалы - Для физ. лица выводить только инициалы имени и отчества.
//
// Возвращаемое значение:
//  Сведения - собранные сведения.
//
Функция СведенияОЮрФизЛице(ЮрФизЛицо, ДатаПериода = '20200101', ДляФизЛицаТолькоИнициалы = Истина, БанковскийСчет = Неопределено) Экспорт

	Сведения = Новый Структура("Представление, ПолноеНаименование, СокращенноеНаименование, НаименованиеДляПечатныхФорм, 
		|КодПоОКПО, ИНН, КПП, Телефоны, ЮридическийАдрес, Банк, БИК, КоррСчет, НомерСчета, АдресБанка, Свидетельство");
	Запрос   = Новый Запрос;
	Данные   = Неопределено;

	Если НЕ ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		Возврат Сведения;
	КонецЕсли;

	Если БанковскийСчет = Неопределено ИЛИ БанковскийСчет.Пустая() Тогда
		ТекБанковскийСчет = ЮрФизЛицо.ОсновнойБанковскийСчет;
	Иначе
		ТекБанковскийСчет = БанковскийСчет;
	КонецЕсли;
	
	// Выберем основные сведения о контрагентеЮрФизЛицо.ОсновнойБанковскийСчет.БанкДляРасчетов.Пустая
	Если ТекБанковскийСчет.БанкДляРасчетов.Пустая() Тогда
		ИмяРеквизитаБанка = "Банк";
	Иначе
		ИмяРеквизитаБанка = "БанкДляРасчетов";
	КонецЕсли;
	
	Если ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Организации") Тогда
		ИмяСправочника = "Организации";
	ИначеЕсли ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Контрагенты") Тогда
		ИмяСправочника = "Контрагенты";
	Иначе
		Возврат Сведения;
	КонецЕсли;

	Запрос.УстановитьПараметр("ПарЮрФизЛицо",      ЮрФизЛицо);
	Запрос.УстановитьПараметр("ПарБанковскийСчет", ТекБанковскийСчет);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Представление КАК Наименование,
	|	Организации.НаименованиеПолное КАК ПолноеНаименование,
	|	Организации.ИНН,
	|	Организации.КПП,
	|	Организации.КодПоОКПО КАК КодПоОКПО,";
	
	Если ИмяСправочника = "Организации" Тогда
		Запрос.Текст = Запрос.Текст + "
		|	Организации.НаименованиеСокращенное КАК СокращенноеНаименование,
		|	ВЫБОР 
		|		КОГДА Организации.ВариантНаименованияДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВариантыНаименованияДляПечатныхФорм.СокращенноеНаименование)
		|			ТОГДА Организации.НаименованиеСокращенное 
		|		ИНАЧЕ
		|			Организации.НаименованиеПолное
		|	КОНЕЦ КАК НаименованиеДляПечатныхФорм,
		|	Организации.СвидетельствоСерияНомер,
		|	Организации.СвидетельствоДатаВыдачи,";
	Иначе
		Запрос.Текст = Запрос.Текст + "
		|	Организации.Представление КАК СокращенноеНаименование,
		|	Организации.НаименованиеПолное КАК НаименованиеДляПечатныхФорм,";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекБанковскийСчет) Тогда
	
		Запрос.Текст = Запрос.Текст + "
		|	""""                           КАК НомерСчета,
		|	""""                           КАК Банк,
		|	""""                           КАК БИК,
		|	""""                           КАК КоррСчет,
		|	""""                           КАК АдресБанка
		|ИЗ
		|	Справочник."+ИмяСправочника+" КАК Организации
		|
		|ГДЕ
		|	Организации.Ссылка = &ПарЮрФизЛицо";
	
	Иначе
	
		Запрос.Текст = Запрос.Текст + "
		|	БанковскиеСчета.НомерСчета                     КАК НомерСчета,
		|	БанковскиеСчета."+ИмяРеквизитаБанка+"          КАК Банк,
		|	БанковскиеСчета."+ИмяРеквизитаБанка+".Код      КАК БИК,
		|	БанковскиеСчета."+ИмяРеквизитаБанка+".КоррСчет КАК КоррСчет,
		|	БанковскиеСчета."+ИмяРеквизитаБанка+".Адрес    КАК АдресБанка
		|ИЗ
		|	Справочник."+ИмяСправочника+" КАК Организации,
		|	Справочник.БанковскиеСчета    КАК БанковскиеСчета
		|
		|ГДЕ
		|	Организации.Ссылка       = &ПарЮрФизЛицо
		|	И БанковскиеСчета.Ссылка = &ПарБанковскийСчет";
		
	КонецЕсли;
	
	Данные = Запрос.Выполнить().Выбрать();
	Данные.Следующий();

	Если НЕ (ЮрФизЛицо.Метаданные().Реквизиты.Найти("ЮрФизЛицо") = Неопределено) Тогда

		Сведения.КодПоОКПО = Данные.КодПоОКПО;
		
		Если ЮрФизЛицо.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
			
			Сведения.КПП = Данные.КПП;
			
		ИначеЕсли ИмяСправочника = "Организации" Тогда
			
			Сведения.Свидетельство = "свидетельство " + Данные.СвидетельствоСерияНомер + " от " + Формат(Данные.СвидетельствоДатаВыдачи, "ДФ=dd.MM.yyyy");
			
		КонецЕсли;

	ИначеЕсли ИмяСправочника = "Организации" Тогда
		
		Сведения.КодПоОКПО = Данные.КодПоОКПО;
		Сведения.КПП       = Данные.КПП;
		
	КонецЕсли;
	
	Сведения.Вставить("ПолноеНаименование",          СокрЛП(Данные.ПолноеНаименование));
	Сведения.Вставить("СокращенноеНаименование",     СокрЛП(Данные.СокращенноеНаименование));
	Сведения.Вставить("НаименованиеДляПечатныхФорм", СокрЛП(Данные.НаименованиеДляПечатныхФорм));
	Сведения.Вставить("Представление",               СокрЛП(Данные.Наименование));
	
	Сведения.Вставить("ИНН",              Данные.ИНН);
	Сведения.Вставить("Телефоны",         ПолучитьТелефонИзКонтактнойИнформации(ЮрФизЛицо));
	Сведения.Вставить("НомерСчета",       Данные.НомерСчета);
	Сведения.Вставить("Банк",             Данные.Банк);
	Сведения.Вставить("БИК",              Данные.БИК);
	Сведения.Вставить("АдресБанка",       Данные.АдресБанка);
	Сведения.Вставить("КоррСчет",         Данные.КоррСчет);
	Сведения.Вставить("ЮридическийАдрес", ПолучитьАдресИзКонтактнойИнформации(ЮрФизЛицо, "Юридический"));
	Сведения.Вставить("ФактическийАдрес", ПолучитьАдресИзКонтактнойИнформации(ЮрФизЛицо, "Фактический"));

	Если НЕ ЗначениеЗаполнено(Сведения.ПолноеНаименование) Тогда
		Сведения.ПолноеНаименование = Сведения.Представление;
	КонецЕсли;
	
	Возврат Сведения;

КонецФункции // СведенияОЮрФизЛице()

// Функция находит актуальное значение телефона в контакной информации.
//
// Параметры:
//  Объект - СправочникСсылка, объект контактной информации
//
// Возвращаемое значение
//  Строка - представление найденного телефона
//
Функция ПолучитьТелефонИзКонтактнойИнформации(Объект) Экспорт

	//Если ТипЗнч(Объект) = Тип("СправочникСсылка.Организации") Тогда
	//	Окончание = "Организации";
	//ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
	//	Окончание = "Контрагента";
	//КонецЕсли;
	//
	//ВидТелефона = Справочники.ВидыКонтактнойИнформации["Телефон" + Окончание];

	//Факс = "";
	//
	//Если Окончание = "Организации" Тогда
	//	
	//	ВидФакса = Справочники.ВидыКонтактнойИнформации["ФаксОрганизации"];
	//	
	//	Запрос = Новый Запрос;
	//	
	//	Запрос.УстановитьПараметр("Объект", Объект);
	//	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Телефон);
	//	Запрос.УстановитьПараметр("Вид"   , ВидФакса);
	//	
	//	Запрос.Текст = "
	//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	//	|	КонтактнаяИнформация.Представление
	//	|ИЗ
	//	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//	|ГДЕ
	//	|	КонтактнаяИнформация.Объект = &Объект
	//	|	И
	//	|	КонтактнаяИнформация.Тип = &Тип
	//	|	И
	//	|	КонтактнаяИнформация.Вид = &Вид
	//	|";
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	Если Не РезультатЗапроса.Пустой() Тогда
	//		Факс = ", факс: " + РезультатЗапроса.Выгрузить()[0].Представление;
	//	КонецЕсли;
	//КонецЕсли;


	//Запрос = Новый Запрос;
	//
	//Запрос.УстановитьПараметр("Объект", Объект);
	//Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Телефон);
	//Запрос.УстановитьПараметр("Вид"   , ВидТелефона);
	//
	//Если Окончание = "Организации" Тогда
	//	Если Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
	//		Запрос.УстановитьПараметр("Объект", Объект.ИндивидуальныйПредприниматель);
	//		Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ТелефонСлужебныйФизЛица);
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Запрос.Текст = "
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	//|	КонтактнаяИнформация.Представление
	//|ИЗ
	//|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//|ГДЕ
	//|	КонтактнаяИнформация.Объект = &Объект
	//|	И
	//|	КонтактнаяИнформация.Тип = &Тип
	//|	И
	//|	КонтактнаяИнформация.Вид = &Вид
	//|";
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Если РезультатЗапроса.Пустой() Тогда
	//	Возврат "";
	//Иначе
	//	Возврат РезультатЗапроса.Выгрузить()[0].Представление + Факс;
	//КонецЕсли;
    Возврат "";
	
КонецФункции // ПолучитьТелефонИзКонтактнойИнформации()

// Функция находит актуальное значение адреса в контакной информации.
//
// Параметры:
//  Объект - СправочникСсылка, объект контактной информации
//  ТипАдреса - тип контактной информации
//
// Возвращаемое значение
//  Строка - представление найденного адреса
//
Функция ПолучитьАдресИзКонтактнойИнформации(Объект, ТипАдреса = "") Экспорт

	//ОбъектКонтактнойИнформации = Объект;
	//
	//Если НЕ ЗначениеЗаполнено(ТипАдреса) Тогда
	//	Возврат "";
	//КонецЕсли;

	//Если ТипАдреса="Фактический" Тогда
	//	Начало = "Факт";
	//ИначеЕсли ТипАдреса="Регистрации"
	//	  ИЛИ ТипАдреса="Юридический" Тогда
	//	Начало = "Юр";
	//Иначе
	//	Возврат "";
	//КонецЕсли;
	//
	//Если ТипЗнч(Объект) = Тип("СправочникСсылка.Организации") Тогда
	//	
	//	Если Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
	//		
	//		ОбъектКонтактнойИнформации = Объект.ИндивидуальныйПредприниматель;
	//		
	//		Окончание = "ФизЛица";
	//		
	//	Иначе
	//		
	//		Окончание = "Организации";
	//		
	//	КонецЕсли;
	//	
	//ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
	//	
	//	Окончание = "Контрагента";
	//	
	//КонецЕсли;
	//
	//ВидАдреса = Справочники.ВидыКонтактнойИнформации[Начало+"Адрес"+Окончание];

	//Запрос = Новый Запрос;
	//
	//Запрос.УстановитьПараметр("Объект", ОбъектКонтактнойИнформации);
	//Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
	//Запрос.УстановитьПараметр("Вид"   , ВидАдреса);
	//
	//Запрос.Текст = "
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	//|	КонтактнаяИнформация.Представление
	//|ИЗ
	//|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//|ГДЕ
	//|	КонтактнаяИнформация.Объект = &Объект
	//|	И
	//|	КонтактнаяИнформация.Тип = &Тип
	//|	И
	//|	КонтактнаяИнформация.Вид = &Вид
	//|";
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Если РезультатЗапроса.Пустой() Тогда
	//	Возврат "";
	//Иначе
	//	Возврат РезультатЗапроса.Выгрузить()[0].Представление;
	//КонецЕсли;
	Возврат "";
	
КонецФункции // ПолучитьАдресИзКонтактнойИнформации()
